<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Fiddler使用</title>
    <url>/2021/05/22/fiddler/</url>
    <content><![CDATA[<img src="/2021/05/22/fiddler/blog12.png" style="zoom:60%">

<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">Fiddler一款优秀的Web调试工具，记录所有客户端和服务器的http和https请求；允许监视、设置断点、修改输入输出数据。</font></p>
<a id="more"></a>


<h3 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h3><p><font size="3">Fiddler工作原理：位于客户端和服务端的HTTP代理，web服务器代理的形式；fiddler截获浏览器发送给服务器的数据，冒充浏览器发送给服务器；服务器返回的数据，也会被fiddler截获，经fiddler返回浏览器。</font></p>
<p><font size="3">是以代理web服务器的形式工作，它使用代理地址:127.0.0.1，端口:8888,这时fiddler的默认端口，也就是说我们发送的每一个请求和收到的每一个响应都会先经过fiddler，这样就实现了抓取数据包的工作。当Fiddler退出的时候它会自动注销，这样就不会影响别的程序。不过如果Fiddler非正常退出，这时候因为Fiddler没有自动注销，会造成网页无法访问。解决的办法是重新启动下Fiddler。</font></p>
<p><font>安装和测试使用的时候需要关闭防火墙和杀毒软件！</font></p>
<h4 id="Fiddler过滤"><a href="#Fiddler过滤" class="headerlink" title="Fiddler过滤"></a>Fiddler过滤</h4><img src="/2021/05/22/fiddler/host_filter.png" style="zoom:70%">

<p><font size="3">1、User Fiters启用：Filters–&gt;勾选Use Filters;<br>2、过滤条件设置：（ir.baidu.com,或全域名，或通配符 星号.baidu.com）<br>3、保存应用配置：选择Ations中Run Filterset now</font></p>
<h4 id="Fiddler抓包"><a href="#Fiddler抓包" class="headerlink" title="Fiddler抓包"></a>Fiddler抓包</h4><p><font size="3">抓包：将网络传输发送与接收的数据包进行截获、重发、编辑、转存；也用来检查网络安全</font></p>
<p><font size="3">获取请求<br>1、启动fiddler，确保在抓包状态(file–&gt;capture traffic 勾选或点击底部状态栏左下角capture)<br>2、使用浏览器输入访问网址<br>3、fiddler会话列表中选中要查看的请求，在右侧inspector面板查看详情</font></p>
<h4 id="仿真http请求"><a href="#仿真http请求" class="headerlink" title="仿真http请求"></a>仿真http请求</h4><p><font size="3">捕获要测试的请求<br>1、选中Composer面板，<br>2、将要测试的请求从会话列表中拖拽到Composer面板下<br>3、修改下面的Request Body中参数数据，点击Execute</font></p>
<img src="/2021/05/22/fiddler/composer.png" style="zoom:80%">


<h4 id="设置断点"><a href="#设置断点" class="headerlink" title="设置断点"></a>设置断点</h4><h5 id="修改请求数据"><a href="#修改请求数据" class="headerlink" title="修改请求数据"></a>修改请求数据</h5><font size="3">
1、Rules--automoatic  brakpoints---before requests
2、客户端向服务器发送请求
3、选择请求，在右侧Inspectors--TextView或WebForms等界面修改请求的数据，
4、在修改数据后，点击Break on Response按钮，进行请求的发送，（也可跳过）
5、然后在服务返回信息后，点击Run to Completetion完成响应数据的返回并完成。
请求断点：打在客户端返回数据之后，数据未到达服务端之前，fiddler停留在断点处</font>

<img src="/2021/05/22/fiddler/request.png" style="zoom:60%">

<h5 id="测试数据缺失和模拟网络中断"><a href="#测试数据缺失和模拟网络中断" class="headerlink" title="测试数据缺失和模拟网络中断:"></a>测试数据缺失和模拟网络中断:</h5><font size="3">
设置断点后的测试，可以进行一些极端测试，比如删除响应数据，比如一个网页有很多表格，删除数据后，查看页面显示是否友好，这样就不需要数据库删除数据操作</font>
<font size="3">同时可以模拟网络中断，前端超时后的页面是否显示友好</font>

<h5 id="修改响应数据"><a href="#修改响应数据" class="headerlink" title="修改响应数据"></a>修改响应数据</h5><font size="3">
1、Rules--automoatic  brakpoints---after responses
2、客户端向服务器发送请求
3、选择请求，进入Inpectorsf在右下页面的TextView/Raw响应页中修改响应数据
4、注意：如果有“response body is encoded.click to ecode显示，
一定要先点击后，再去修改响应数据。未操作直接修改响应数据后，会导致响应存在问题。
5、在修改响应数据后，点击Run to Completetion返回给响应数据，完成操作。
响应断点：打在服务端返回数据之后，但未到达浏览器之前，fiddler停留在断点处</font>

<img src="/2021/05/22/fiddler/response.png" style="zoom:60%">




<h4 id="模拟弱网测试"><a href="#模拟弱网测试" class="headerlink" title="模拟弱网测试"></a>模拟弱网测试</h4><p><font size="3">1、模拟弱网环境<br>    打开Fiddler，Rules-&gt;Performance（性能）-&gt;勾选 Simulate Modem Speeds（模拟调制解调器速度），勾选之后访问网站会发现网络慢了很多</font></p>
<p><font size="3">2、Fiddler弱网的原理<br>    Rules–&gt;Customize Rules（自定义规则）,打开CustomRules.js 文档，在文件中查找关键字m_SimulateModem或300，可进行修改<br>发送速度和接收速度</font></p>
<img src="/2021/05/22/fiddler/modem.png" style="zoom:80%">

<p><font size="3">分析代码：<br>oSession[“request-trickle-delay”] = “300”;<br>注释，Delay sends by 300ms per KB uploaded.上传1KB需要300ms，<br>转化一下上传速度：1Kb/0.3s = 10/3(KB/s)<br>如果想设置上传的速度为50KB/s，你则需要设置Delay 时间为 20ms<br>同样的方法，也可以限制上传的速度，调整oSession[“response-trickle-delay”]即可。<br>设置后保存后生效</font></p>
<p><font size="3">选择第一个请求和最后一个请求，可获得整个页面加载所消耗的总体时间。从条形图表中还可以分别出哪些请求耗时最多，从而对页面的访问进行访问速度优化</font></p>
<img src="/2021/05/22/fiddler/overalltime.png" style="zoom:80%">

<p><font size="3">不同请求耗时多少的图形表，获取那种资源耗时最大，进而进行优化：</font></p>
<img src="/2021/05/22/fiddler/timeline.png" style="zoom:60%">


<h4 id="手机抓包"><a href="#手机抓包" class="headerlink" title="手机抓包"></a>手机抓包</h4><p><font size="3">Tools–Options–HTTPS勾选Decrypt HTTPS traffic</font><br><img src="/2021/05/22/fiddler/capture.png" style="zoom:80%"></p>
<p><font size="3">抓http包：<br>    1、Tools–Options–Connections.勾选Allow remote comoputers to connect.<br>    2、重启Fiddler,确保防火墙允许（电脑关闭防火墙杀毒软件），Fiddler进程可以远程连接Android设备连接同一WiFi（确保设备可以访问到<a href="https://FiddlerMachineIP:8888该地址会返回Fiddler">https://FiddlerMachineIP:8888该地址会返回Fiddler</a> Echo Service页面，可不操作）<br>    3、手机打开设置–WLAN–连接上WLAN设置，点击代理–手动–设置主机名Fiddler所在的主机IP,端口为Fiddler监听端口</font><br><img src="/2021/05/22/fiddler/phone.png" style="zoom:80%"><br><img src="/2021/05/22/fiddler/dai.png" style="zoom:80%"></p>
<p><font size="3">抓https包<br>    要安装证书打开设备浏览器，访问<a href="http://ipv4:8888/" target="_blank" rel="noopener">http://ipv4:8888/</a>    (如：<a href="http://192.168.0.101:8888/" target="_blank" rel="noopener">http://192.168.0.101:8888/</a>)<br>点击底部FiddlerRoot certificate下载证书<br>打开更多设置–系统安全–加密与凭据–从存储设备安装–选择下载的FiddlerRoot.cer进行安装<br>浏览器打开<a href="http://www.baidu.com，查看抓取HTTPS包" target="_blank" rel="noopener">www.baidu.com，查看抓取HTTPS包</a></font></p>
<p><font size="3">鼠标定位在左边会话框区域，快捷键：Ctrl+X  清空屏幕</font></p>
<h4 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h4><p><font size="3">Charles是一个HTTP代理服务器,HTTP监视器,反转代理服务器，当浏览器连接Charles的代理访问互联网时，Charles可以监控浏览器发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request, response和HTTP headers （包含cookies与caching信息）</font></p>
<p><font size="3">代理：Proxy–Access Control Settings–add IP(手机和电脑连接统一WiFi，手动代理，设置主机名和端口)</font></p>
<p><font size="3"></font></p>
]]></content>
      <categories>
        <category>功能测试</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Fiddler</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo使用</title>
    <url>/2021/04/26/hello_hexo/</url>
    <content><![CDATA[<p><img src="/2021/04/26/hello_hexo/blog4.png" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</font></p>
<a id="more"></a>


<h3 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h3><p><font size="3">hexo是一个基于Node.js的静态博客网站生成器，是一个快速、简洁且高效的博客框架，作者是来自台湾的 <a href="http://mailto:tommy351@gmail.com/" target="_blank" rel="noopener">Tommy Chen</a>，依赖少易于安装使用，利用靓丽的主题生成静态网页。</font></p>
<p><font size="3">特点：<br>1.依赖少（仅依赖node），易于安装；<br>2.速度快，支持多进程，利用靓丽的主题，几百篇文章可以秒生成静态网页；<br>3.流畅的撰写，支持GitHub Flavored Markdown和所有Octopress的插件;<br>4.高扩展性、自订性，hexo支持EJS、Swig和Stylus;<br>5.兼容于Windows、Mac &amp; Linux;</font></p>
<h3 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h3><h5 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h5><font size="3">
   widows:到git官网下载，Download git，下载安装后通过Git Bash命令行工具来使用git
   linux:最早git就是Linux上编写的，只需要一行代码</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install	&#x2F;&#x2F; linux命令安装</span><br><span class="line"></span><br><span class="line">git --version &#x2F;&#x2F; 安装后查看版本</span><br></pre></td></tr></table></figure>


<h5 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h5><font size="3">
   hexo是基于nodejs编写的，需要安装node.js里面的npm工具
   Windows：通过nvs（推荐）或者nvm安装，确保勾选add to path
   Mac：使用Homebrew或MacPorts安装
   Linux：（DEB/RPM-based）：从NodeSource安装</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">&#x2F;&#x2F; 检查是否安装成功</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>


<h5 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h5><font size="3">
   ​前面git和nodejs安装好后，使用npm安装Hexo，先创建一个文件夹blog，然后cd到这个文件夹，右键git bash打开</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli	&#x2F;&#x2F; 输入命令安装</span><br><span class="line"></span><br><span class="line">hexo -v	&#x2F;&#x2F; 查看版本</span><br><span class="line"></span><br><span class="line">hexo init myblog&#x2F;&#x2F; 初始化hexo</span><br><span class="line"></span><br><span class="line">cd myblog	</span><br><span class="line"></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p><font size="3">新建完成后，指定文件夹目录简介：<br>&nbsp;&nbsp;&nbsp;node_modules：依赖包<br>&nbsp;&nbsp;&nbsp;public：存放生成的页面，网站文件，发布的站点文件<br>&nbsp;&nbsp;&nbsp;scaffolds：生成文字的一些模板<br>&nbsp;&nbsp;&nbsp;source：用来存放你的文章，资源文件夹<br>&nbsp;&nbsp;&nbsp;themes：主题<br>&nbsp;&nbsp;&nbsp;config.yml：博客的配置文件<br>&nbsp;&nbsp;&nbsp;tag：标签文件<br>&nbsp;&nbsp;&nbsp;archive：归档文件夹<br>&nbsp;&nbsp;&nbsp;category：分类文件夹</font></p>
<h5 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h5><font size="3">
   ​hexo提供了默认主题landscape，如果需要更改，先在themes目录创建一个next文件夹，然后在hexo站点目录下右击打开Git Bash Here，输入命令</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next.git themes&#x2F;next</span><br></pre></td></tr></table></figure>

<p><font size="3">在blog目录下_config.yml里面theme的配置修改为next</font><br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p>
<h5 id="Github创建配置和使用"><a href="#Github创建配置和使用" class="headerlink" title="Github创建配置和使用"></a>Github创建配置和使用</h5><font size="3">
   首先需要在github账户下，新建仓库new repository
   创建一个和用户名相同的仓库，后面加.github.io，这样到后面部署到github page的时候才会被识别，也就是xxxx.github.io，其他xxxx是注册github的用户名;</font>

<p>   <font size="3">生成SSH密钥添加到github，github的setting中；</font></p>
<p>   <font size="3">id_rsa是你这台电脑的私人密钥，不能给别看的；</font></p>
<p>   <font size="3">id_rsa.pub是公共秘钥，可以随便给别人看，把这个公钥放在github上，这样当你链接github自己的账户时，就会根据公共匹配你的私钥，通过git上传你的文件到github上。</font></p>
<p>   <font size="3">找到SSH keys设置选项，点击New SSh key</font></p>
<p>   <font size="3">在gitbash中，查看是否成功</font><br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p>
<h5 id="将Hexo部署到GitHub"><a href="#将Hexo部署到GitHub" class="headerlink" title="将Hexo部署到GitHub"></a>将Hexo部署到GitHub</h5><font size="3">
   将hexo和github关联起来，将hexo生成的文章部署到github上，打开站点配置文件_config.yml</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deply:</span><br><span class="line"></span><br><span class="line">type: git</span><br><span class="line"></span><br><span class="line">repo: https:&#x2F;&#x2F;jamieslau.github.io&#x2F;index.html</span><br><span class="line"></span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>
<font size="3">需先按照deploy-git,也就是部署的命令，这样你才能用命令部署到github</font>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p><font size="3">执行hexo命令</font><br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean	&#x2F;&#x2F; 清除之前生成的东西，可以不加</span><br><span class="line"></span><br><span class="line">hexo generate	&#x2F;&#x2F; 生成静态文章，hexo g 缩写</span><br><span class="line"></span><br><span class="line">hexo deploy	&#x2F;&#x2F; 部署文章， hexo d 缩写</span><br><span class="line"></span><br><span class="line">hexo s	&#x2F;&#x2F; 发布，本地预览</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;localhost:4000	&#x2F;&#x2F; 本地查看</span><br><span class="line"></span><br><span class="line">使用sublime修改config.yml配置JamiesLau博客</span><br></pre></td></tr></table></figure><br><font size="3">deploy时需要输入username和password</font></p>
<p><font size="3">创建一个新帖子</font><br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new 帖子名称&#x2F;&#x2F; 创建新帖子，hexo n 帖子名称   缩写</span><br><span class="line"></span><br><span class="line">Sublime编辑帖子标签、分类</span><br><span class="line"></span><br><span class="line">title: 重拾记忆</span><br><span class="line">date: 2021-04-24 20:00:39</span><br><span class="line">tags:</span><br><span class="line"> - 记录</span><br><span class="line"> - 分享</span><br><span class="line">categories: 日常记录</span><br><span class="line"></span><br><span class="line">编辑正文，开始你的创作</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title>杭州之旅</title>
    <url>/2021/05/06/holiday1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="1b105be1ac193dbc8407bc49f335344bacc27543e3873c6defc7d08a8a5a4aec">4ddf7ce7117f9beedd60fc994fde7db1b55998224733fd676258488495dd293fef74d20dbffc6b000299efc5772e1e79df35a86397d43077909401f194edd2f96357207a1ca7619a03acb1ef2008496d70fc624e70f425c56202840d22321bbee4a6e8c16ebc46eab366d92cd683af3369f85ce60aad71d1b5b4e1fd3419467600192bb2a86478bc733d68e2390b4444d7544943cf9cc37d990dddd0f0b0f24a3fb58d248365f1e26ad5c83d737b6350b729e89c7b71e606983d8a5f8c99a0fd369c2e032e12f80b9b46ed829264e974a696ffbcce45f3952ab3f4504e4986f76eb7d25b80905d8ba26ce55cabb2cea7f18a016e4154f1ae4d79cb13729bdf17a43acd5fd1acf229082621e662250e66da4f27469b1ebda8da1cad6f4bdbe9fd172735c0cdc64bc729866864cc01b20fbfe3f6495bdb55b1362bea3f364c36ac0d1ab7eead583c4cfef2eeec268c2d818856a8357da0f0560b4c84de9fa6e83ba2493f60566176cbeafa4e3725cf33dd9dcdb15763ae0e0aedc177da00644d286f87ce68930ed229043f145ac69fb9a52e836bdf33fbb7ee9f3dc8c8242029151ab0ab7a4de399280f8f18a35a5d1c222e12eaa49847c1491f4f881cb93bb1e9171fe6ee3164244802394c32e6054e26d0259d1ca507d0c0ccac9ad1632aacdac6da80bc9bc52f09b57fdd48df981c13b41eaf46657646512ac040b753cbfebddc8615b7120ce8d01826d5d28babe856d7bbcef924746d9c0bdd0be6ae7d64accbf26f99a73069aa516c7ce2386c79647a2a0743326fb64f981859d8bdc6b91873884f2b06e5157b17c0f67592591e8001ed9121ebc224887140310c4bc906524ad471d71c37a0d05ed2e7e54594d37d801f9275a56350a55ba3d83da2ccad8bf49b2c9b6fef9d53fda761f2e783f8b9f6fbaccdcf776d45683aa61629666964c82a9f1ec8a0d977484f830789760dbd8209404b9febd10ca9d07790cf026ef38b0c33556d20122aec8b6be57365eb08e44bfa864bea6c3139139e61923b8288d8865f24fb6e923db72144252c240a694bea12579850abee083d7bb520cdb12c238cc94eda1b48a4c18c4789baa8ccc44d12a3d12612c8e58759a61f629f4af7381da2405ef72e70d3d7f71f690934fdfc52a096fc587ab7b891466dc4e42c50f29f64365a565df61abcff424cbcdf958518462115d96e9c0fc0e4eaa1646e67ef9a8e786e574f3f188e4c251a6289828f49f9b888fcee8123a24138a9b3ccb88c084cdea00480ff7b758c5144b66ee29f980a5c50b6ce39746f9c08280227fbdbd8b80f5718099ab15da73b317a525667b60d78866bbeabfbf741ca9212da4bb6a8d8114e0e64d4c5fbc1f5f6eeafae5b34dabc337b49b16503c775c83121e82480f73e9706e7690c61e229bb040744f0445fa614f3b5f03ee2b4e0359d69df4c9bc93a0572b7e91b037616419ea351b3a47f7a6a82062983ed69bce2efea1ce15bd15e6e26b775bd48321aa0a1d4c0e498b62777470bc3d4f1dc62a0605254e5f3c166d3e90d5fa7ceb64667ad93d23267f02b1c62870cfab61c44f0163adb315ef352bc1492cd2179fe10dfd12a3a6db2ab9ce970db097dba4f2af36525090e3b595af88947451e6a574d2d1acaaf7ddd64cfe2b9a4ad1f3f65481e6a44667bb0c45ec8a6fc8f3a6f5598bb371adc85bc39a484d49c605a03f0866d1ce812b82688085afb8ff7f7b64c4f7798193f1e738629962fac1771115f7fcc75539d137bbb4009c5ba635b041e9fd76397f94bae0d3a945b8093d7cee186f03c17bb602616d23e91a8a04c6acb42ac27c0a662b96fa01a2832127d001eefa9f98fc7a926a4151286c5257bf808b063f46b866abee3433da772875da323da192eabf727f9507ec78957b2ad22a2419e1e4e5224c0a1f99bf26eecc4884fd56a80a050e09bda3fbc8def14fe12dbd865f763504b5223f3cbba459ca02a6e56071f34bdf4724b1772f1bf04733b2f92c47efd205e24606629b54802ad391cf617c93d547ced0b323e6b57cbebf46a1b346740b6d822ecb456619035331e050d5390ad49ff96e7ee6c7faa42ebdbad2741c36415e9b358888dfd9f08d57c428e01614a04015a856db5958b15d396d4744c0c61daeb28f7d4dcc5536057f7258cf95b6f945d4f2fc3686de56fab41ae23b30ea76af1d9d2364584135072f819ddb6611ff8fde3804da9d576b6eda779b564a025b8bc7106566e80c8e977384a6e088998661ba71e39f800b54a0ae2365e567538acf8edf18de5d1eb6c2c05d4fbb514bb673c79b40ec06b4319a32fd6801a651498731d2f8f3f1de2e1f67da110bfd8330d39b28f5627f4bdb5abbb95bd67e87b0c5881dfd84a3ee10cf4ce2b212a68cb467d2955c657c900154b781ec2dfc7ef26a7bda50c4814bddf2ab62d56c70e0b99c5bd15d8eba29b819b93be8c3c70761aef3209212e848d9a5e1274a4734ce83971111a78a15a8f076c2c50eedda5246b0c800765873b530c42871078ebf2dca8a53daf602693e5198506197e62400f6af407dd9365ba940e82d29f839a853f096e18e3e0218400d1f96ed9e43a0a3750109292c5eb19e5c933791851d1885637dd7248732df197ba80cb603e5a8ad7583afa99135425f3e79aab05c929f20c82a97b226258ad4615dd41d26ea28fe40ba48980e0bba30f468b18c0004a873b2ed03d0c51fe860ed65769523f9324db5b6206ecf270605ed98be3558618026cedf02b8a80a9fd6a92b4a5f852965697f3d95f3add9a84f30d3f1cc808828e6afbaa02b75aa8c58dbaf94ea7771ef29b8f0a3ad373a64169accac09f51d1abcf4ece8e70632d453a547a6bda05ef2102996c23f0c25991979f845f1e4fd3a3fa9bb1d82cf50da4a5897495d3bbd445071f5182a580ce22155b53ca377302c5516e1d3cff194223f3395ac4a7cc383cf135f7de622ce7e4f5692498dca99c3884f445b37eb228bc02cd434d63c426cfef7dcab0f6beb1d335a4a6cbccdfceb7c6e31f05719e994e342dad45b53bac656c1836043d3cf9067f90929445fb86c0ff9bebf21c4b9c0e32a60c2bc2f503013581d1c97d7b234e00d9dcc5656fcc3088800a788f5752769634599200a947baa9bfb46f53b7155555ea9d1f3df730ead9c08794211f538cfb70fd93f9e3d66e2c912afe1167f6e5c6f51a084f9df85246c8954416c3b74b9045d1849f786bac9e832c9abd1b4d91086f5328460cee55c04d1f5b4f77eda015be2c19dd519bbac5d5d1d72f6c55373f23c90bc87435bb21fd6c90e9265c42f871cee774970aee61b4b95ce2cf4d56394268b473d2c5f52ea0efd4a7c157b36d8773a5e4dfd7b40066fbc9fda8df91144dc247b8304bb769b87f2e34a8e323961a2b78553221697e58f6cb4dc1a2b6b2d667071a60a2f6e00f642371242aecfaa5dc610e3f558b6c4896d35660fc03e8874b118340962ea2894aa37bd89f48ab9f2f8dea92e9a6f6f1da7e5c18c635392e6be2ec1e46cef4aa78d042316266377e7d0f9b58282cdc58372b800abad7065f93750cfb0595ceca29a95c206badd84dad47da83b2128609f2c13705efd9f6a80d5b4f8e8677626b3d590cc916816b09261d8bc60094846ba300f8845ba8911414d48040d58d6644f33130f631b1cdf9640e42145c503cb447880e38d57a4c58ba56fde0abbb1b4a5a0d0923685e35f91f79c3d3f3c4da2e0c0bec0f8fba38d9bfed1d31578c978113cc9fb1e0ecb670cc7ef21dcea5456276b6a7db241f509508d5390d6439bfd306f7e32ad870ada4a5366e5bf5a5c485a7120d560fbd81829deb6befca9d82f95b9a97afabc3427b7fa16dc908c489b84ec8913fca3f19926131f7196e22408d93f11050ad99a0e20759a654acac988593874dba55cb7e08b990b12e4c1e7c32cd31c8e1dc80cc6c9d518ca14cb92129b12271ef30f5953c75316155e008ed1f101d1dd151a355ae01d7aef8eabf297f</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Welcome to my blog, click enter password to read.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>假日生活</category>
      </categories>
      <tags>
        <tag>假日</tag>
        <tag>照片</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法说明</title>
    <url>/2021/04/25/mark_down/</url>
    <content><![CDATA[<p><img src="/2021/04/25/mark_down/blog2.jpg" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">Markdown一个Web上使用的文本到HTML的转换工具，可以通过简单、易读写的文本格式生成结构化的HTML文档。</font></p>
<a id="more"></a>

<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><font size="3">Markdown 的目标是实现「易读易写」，适用于网络的书写语言，特殊字符能够自动转换</font></p>
<h4 id="语法使用"><a href="#语法使用" class="headerlink" title="语法使用"></a>语法使用</h4><h6 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h6><p><font size="3">标题,”#”越多，字体越小，“#”后面有空格，对应h1-h6</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line"></span><br><span class="line">## 二级标题</span><br><span class="line"></span><br><span class="line">### 三级标题</span><br><span class="line"></span><br><span class="line">#### 四级标题</span><br><span class="line"></span><br><span class="line">##### 五级标题</span><br><span class="line"></span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h5 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h5><h6 id="字体、大小、颜色"><a href="#字体、大小、颜色" class="headerlink" title="字体、大小、颜色"></a>字体、大小、颜色</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font face&#x3D;&quot;黑体&quot;&gt;我是黑体字&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;red&gt;我是红色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#008000&gt;我是绿色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;Blue&gt;我是蓝色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font size&#x3D;&quot;3&quot;&gt;我是尺寸&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;黑体&quot; color&#x3D;green size&#x3D;&quot;3&quot;&gt;我是黑体，绿色、尺寸3&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure>
<h6 id="文字添加背景色"><a href="#文字添加背景色" class="headerlink" title="文字添加背景色"></a>文字添加背景色</h6><p><font size="3">bgcolor属性实现背景色</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">	&lt;tr&gt;</span><br><span class="line">		&lt;td bgcolor&#x3D;yellow&gt;背景颜色为yellow&lt;&#x2F;td&gt;</span><br><span class="line">	&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br></pre></td></tr></table></figure>
<table>
    <tr>
        <td bgcolor="yellow">背景颜色为yellow</td>
    </tr>
</table>


<h5 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h5><p><font size="3">无序列表：用*、+、- 来创建</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 1		</span><br><span class="line">* 2</span><br><span class="line">* 3</span><br><span class="line">+ 1</span><br><span class="line">+ 2</span><br><span class="line">+ 3</span><br><span class="line">- 1</span><br><span class="line">- 2</span><br><span class="line">- 3</span><br></pre></td></tr></table></figure>
<ul>
<li>1</li>
<li>2</li>
<li>3</li>
</ul>
<p><font size="3">有序列表：根据第一行列表的数字顺序来</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 列表1</span><br><span class="line">2. 列表2</span><br><span class="line">3. 列表3</span><br></pre></td></tr></table></figure>
<font size="3">

<pre><code>1. 列表1

2. 列表2

3. 别表3</code></pre></font>



<h5 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h5><p><font size="3">对某一部分的内容做一些说明或者引用一些话</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 所有的渺小都可以变得伟大</span><br><span class="line">	&gt; 某某人说的</span><br><span class="line">* 前方高能</span><br><span class="line">	&gt; 注意：这里是为了提醒前面有很刺激的事情发生，请做好准备</span><br></pre></td></tr></table></figure>


<ul>
<li><p>所有的渺小都可以变得伟大</p>
<blockquote>
<p>某人说的</p>
</blockquote>
</li>
<li><p>前方高能</p>
<blockquote>
<p>注意：这里是为了提醒前面有很刺激的事情发生，请做好准备 </p>
</blockquote>
</li>
</ul>
<p><font size="3">无序列表下发的便是引用，可以有多种用途，用法是在语句前面加一个&gt;,注意是英文的右尖括号</font></p>
<p><font size="3">嵌套引用</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 一级引用</span><br><span class="line">&gt;&gt; 二级引用</span><br><span class="line">&gt;&gt;&gt; 三级引用</span><br><span class="line">&gt;&gt;&gt;&gt; 四级引用</span><br><span class="line">&gt;&gt;&gt;&gt;&gt; 五级引用</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
<blockquote>
<p>三级引用</p>
<blockquote>
<p>四级引用</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<h5 id="华丽分割线"><a href="#华丽分割线" class="headerlink" title="华丽分割线"></a>华丽分割线</h5><p><font size="3">分割线可以由（星号、减号、底线）三个符号表示，注意至少三个，且不需要连续，有空格也可以</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line">* * *</span><br><span class="line">*******</span><br><span class="line">---</span><br><span class="line">- - -</span><br><span class="line">-----------</span><br><span class="line">_ _ _</span><br></pre></td></tr></table></figure>

<hr>
<hr>
<h5 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h5><p><font size="3">行内式</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[百度](http:&#x2F;&#x2F;www.baidu.com)一下</span><br></pre></td></tr></table></figure>


<p><a href="http://www.baidu.com" target="_blank" rel="noopener">百度</a>一下</p>
<p><font size="3">[ ]内放文字，( )内放链接<br>参数式</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[name]: http:&#x2F;&#x2F;www.baidu.com&#x2F;name &quot;名称&quot;</span><br><span class="line">[name]: http:&#x2F;&#x2F;www.baidu.com&#x2F;home &quot;首页&quot;</span><br><span class="line">[中文]: &#x2F;home&#x2F;name &quot;写的&quot;</span><br><span class="line"></span><br><span class="line">这里是[name],这里是[home],这里是[中文]</span><br></pre></td></tr></table></figure>

<p><font size="3">这里是<a href="http://www.baidu.com/name" target="_blank" rel="noopener" title="名称">name</a>,这里是 [home],这里是<a href="/home/name" title="写的">中文</a><br>把链接当成参数，适合多出使用相同链接的场景</font></p>
<h5 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h5><p><font size="3">行内式和参数式</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">行内式</span><br><span class="line">！[我是图片](https:&#x2F;&#x2F;ww.cnblogs.com&#x2F;images&#x2F;log_small.gif)</span><br><span class="line">![](&#x2F;post&#x2F;hello_hexo.jpg)</span><br><span class="line"></span><br><span class="line">参数式</span><br><span class="line">[博客园]: https:&#x2F;&#x2F;www.cnblogs.com&#x2F;images&#x2F;log_small.gif</span><br><span class="line">参数式图片，这里是！[博客园]</span><br><span class="line"></span><br><span class="line">设置图片百分比</span><br><span class="line">&lt;img src&#x3D;&quot;&#x2F;index&#x2F;index.jpg&quot; width&#x3D;&quot;50%&quot; height&#x3D;&quot;50%&quot;&gt;</span><br><span class="line"></span><br><span class="line">设置图片大小</span><br><span class="line">&lt;img src&#x3D;&quot;&#x2F;index&#x2F;index.jpg&quot; width&#x3D;&quot;250&quot; height&#x3D;&quot;350&quot;&gt;</span><br><span class="line"></span><br><span class="line">设置图片居中</span><br><span class="line">&lt;div align&#x3D;right&gt;	&#x2F;&#x2F;ps:center、left、right</span><br><span class="line">	&lt;img src&#x3D;&quot;&#x2F;index&#x2F;index.jpg&quot; width&#x3D;&quot;50%&quot; height&#x3D;&quot;50%&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<h5 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h5><p><font size="3">第一种，单行用ˋ</font></p>
<p><code>&lt;p&gt;&lt;a href=&quot;/home&quot; title=&quot;说明&quot;&gt;门前大桥下&lt;/a&gt;&lt;/p&gt;</code></p>
<p>第二种，多行用三个ˋ</p>
<p>ˋ ˋ ˋ<br><code>&lt;p&gt;&lt;a href=&quot;/home&quot; title=&quot;说明&quot;&gt;门前大桥下&lt;/a&gt;&lt;/p&gt;</code>​<br>ˋ ˋ ˋ</p>
<h5 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|	name	|	age		|sex	|</span><br><span class="line">|:----:|:---:|:--------:|:------:|</span><br><span class="line">|	tony	|	20		|	男	|</span><br><span class="line">|	lucy	|	19		|	女	|</span><br><span class="line"></span><br><span class="line">表头1	|	表头2</span><br><span class="line">-------------|------------</span><br><span class="line">Content Cell	| Content Cell</span><br><span class="line">Content Cell	| Content Cell</span><br><span class="line"></span><br><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|85</span><br><span class="line">小路|男|90</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">name</th>
<th align="center">age</th>
<th align="center">sex</th>
</tr>
</thead>
<tbody><tr>
<td align="center">tony</td>
<td align="center">20</td>
<td align="center">男</td>
</tr>
<tr>
<td align="center">lucy</td>
<td align="center">19</td>
<td align="center">女</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>表头1</th>
<th>表头2</th>
</tr>
</thead>
<tbody><tr>
<td>Content Cell</td>
<td>Content Cell</td>
</tr>
<tr>
<td>Content Cell</td>
<td>Content Cell</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>学号</th>
<th>姓名</th>
<th>分数</th>
</tr>
</thead>
<tbody><tr>
<td>小明</td>
<td>男</td>
<td>89</td>
</tr>
<tr>
<td>小路</td>
<td>男</td>
<td>95</td>
</tr>
</tbody></table>
<h5 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*字体倾斜*</span><br><span class="line">_字体倾斜_</span><br><span class="line">**字体加粗**</span><br><span class="line">__ 字体加 __</span><br></pre></td></tr></table></figure>

<p><em>字体倾斜</em><br><em>字体倾斜</em><br><strong>字体加粗</strong><br><strong>字体加粗</strong></p>
<p><font size="3">一个星号或者是一个下划线包起来，会转换为<em>倾斜，如果2个，会转换为<strong>加粗</strong></em></font></p>
<h5 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* \\</span><br><span class="line">* \ˋ</span><br><span class="line">* \~</span><br><span class="line">* \*</span><br><span class="line">* \_</span><br><span class="line">* \-</span><br><span class="line">* \+</span><br><span class="line">* \.</span><br><span class="line">* \!</span><br></pre></td></tr></table></figure>

<ul>
<li>\</li>
<li>\ˋ</li>
<li>~</li>
<li>*</li>
<li>_</li>
<li>-</li>
<li>+</li>
<li>.</li>
<li>!</li>
</ul>
<h5 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~~请删除我吧~~</span><br></pre></td></tr></table></figure>

<p><del>请删除我吧</del></p>
<p><font size="3">常用基本就这些了，还有常用的，后续补充上去！</font></p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub使用说明</title>
    <url>/2021/05/09/git_tool/</url>
    <content><![CDATA[<img src="/2021/05/09/git_tool/github.png" style="zoom:50%">


<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">Github，一个面向开源及私有软件项目的托管平台。</font></p>
<a id="more"></a>



<h3 id="GitHub简介"><a href="#GitHub简介" class="headerlink" title="GitHub简介"></a>GitHub简介</h3><p><font size="3">GitHub是最大的开源代码托管平台，旨在促进在一个共同项目上工作的个人之间的代码托管、版本控制和协作；因为只支持git作为唯一的版本库格式进行托管，故名GitHub，付费用户可以建私人仓库，我们一般的免费用户只能使用公共仓库，也就是代码要公开。</font></p>
<p><font size="3">github相关词语介绍：<br>1.Repository    仓库，用来存放项目代码，每个项目对应一个仓库<br>2.Star    收藏，收藏项目<br>3.Fork    复制克隆项目<br>&nbsp;&nbsp;你的开源项目，别人想在你这个项目的基础上做些改进，然后应用到自己项目，然后他fork项目，他的主页就多了一个项目，（本质上在原有项目的基础上新建了一个分支），他可以随意改进，不影响原有项目<br>4. Pull Request    发起请求<br>&nbsp;&nbsp;如别人Fork你的项目后，在该基础上改进，为让更多人受益，想把自己的合并到原有项目里向你发起pull request，待你review代码测试OK，接受他的请求，就可以改进原有项目<br>5. Watch    关注，watch某个项目，该项目更新后能收到通知提醒<br>6. Issue    事务卡片、问题，发现代码bug，给项目提个issue/问题，然后被修复OK就可以close</font></p>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p><font size="3">git管理github托管项目代码</font></p>
<p><font size="3">Git工作区域<br>1.Git Repository（git仓库）最终确定的文件保存到仓库，成为一个新的版本，对他人可见；<br>2.暂存区    暂存已经修改的文件最后统一提交到git仓库中；<br>3.工作区（Working Directory）添加、编辑、修改文件等动作；</font></p>
<p><img src="/2021/05/09/git_tool/status.png" alt></p>
<p><font size="3">目标文件夹Shift+右键==》Powershell窗口==》输入start cmd 回车==》进入cmd窗口</font></p>
<p><font size="3">git命令</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">克隆</span><br><span class="line"></span><br><span class="line">git clone git@github.com:JamiesLau&#x2F;demo.git</span><br><span class="line"></span><br><span class="line">Git本地仓库管理</span><br><span class="line"></span><br><span class="line">git status	&#x2F;&#x2F;查看工作区中文件的状态</span><br><span class="line"></span><br><span class="line">git add first.txt	&#x2F;&#x2F; 将文件添加到暂存区</span><br><span class="line"></span><br><span class="line">git commit -m &quot;first commit&quot;	&#x2F;&#x2F; 提交到git仓库</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;you@example.com&quot;	&#x2F;&#x2F; 设置用户名 邮箱           </span><br><span class="line"></span><br><span class="line">git config --global user.name &quot;Your Name&quot;	&#x2F;&#x2F; 设置用户名</span><br><span class="line"></span><br><span class="line">git config --list	&#x2F;&#x2F; 查看设置</span><br><span class="line"></span><br><span class="line">git log	&#x2F;&#x2F; 查看log</span><br><span class="line"></span><br><span class="line">git reset id (log 查看commit的id)	 &#x2F;&#x2F;能将文件从仓库回退到暂存区</span><br><span class="line"></span><br><span class="line">git push	&#x2F;&#x2F; 文件push到远端</span><br><span class="line"></span><br><span class="line">rm -rf second.txt</span><br><span class="line"></span><br><span class="line">git rm second.txt</span><br><span class="line"></span><br><span class="line">git commit -m &quot;提交描述&quot;</span><br></pre></td></tr></table></figure>

<h3 id="Git远程仓库"><a href="#Git远程仓库" class="headerlink" title="Git远程仓库"></a>Git远程仓库</h3><p><font size="3">使用远程仓库的目的：备份、实现代码共享集中化管理<br>git puh </font></p>
<p><img src="/2021/05/09/git_tool/git.png" alt></p>
<p><font size="3">本地仓库同步到git远程仓库</font></p>
<p><img src="/2021/05/09/git_tool/working.png" alt></p>
<p><font size="3">Git克隆操作<br>目的：将远程仓库GitHub对应的项目复制到本地<br>git clone 仓库地址</font></p>
<p><font size="3">问题1：</font></p>
<p><img src="/2021/05/09/git_tool/question1.png" alt></p>
<p><font size="3">如果在GitHub网站上编辑了README文件，所有在本地需要先使用 git pull 命令更新然后在git push</font></p>
<p><font size="3">问题2：</font></p>
<p><img src="/2021/05/09/git_tool/question2.png" alt></p>
<p><font size="3">GitHub Pages 搭建完整<br>个人热点<br>访问：https://用户名.github.io</font></p>
<p><font size="3">搭建步骤：<br>1）创建个人站点==》新建仓库（注：仓库名必须是【用户名.github.io】）<br>2）在仓库下新建index.html的文件即可</font></p>
<p><font size="3">1、github pages 仅支持静态网页<br>2、仓库里面只能是.html文件</font></p>
<p><font size="3">Project Pages项目站点<br>https://用户名.github.io/仓库名<br>搭建<br>1）进入项目首页 ，点击settings<br>2）在settings页面，GitHub Pages点击【Launch automatic page generator】来自动生成主题页面<br>3）新建站点基础信息设置<br>4）选择主题<br>5）生成网页</font></p>
<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">安装</span><br><span class="line"></span><br><span class="line">前提已经安装了node、git</span><br><span class="line"></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">hexo init JamiesLau	(博客名)初始化</span><br><span class="line"></span><br><span class="line">进入博客目录安装依赖</span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">本地使用</span><br><span class="line"></span><br><span class="line">hexo s -p 5555	发布，本地预览</span><br><span class="line"></span><br><span class="line">&lt;http:&#x2F;&#x2F;localhost:5555&gt;	本地查看自带主题hexo</span><br><span class="line"></span><br><span class="line">使用sublime修改_config.yml配置JamiesLau博客</span><br><span class="line"></span><br><span class="line">根据[https:&#x2F;&#x2F;hexo.io&#x2F;zh-cn&#x2F;docs&#x2F;](https:&#x2F;&#x2F;hexo.io&#x2F;zh-cn&#x2F;docs&#x2F;setup)文档说明配置基本信息</span><br><span class="line"></span><br><span class="line">url: &lt;https:&#x2F;&#x2F;JamiesLau.github.io&gt;</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line"></span><br><span class="line">  type: git</span><br><span class="line"></span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;JamiesLau&#x2F;JamiesLau.github.io.git</span><br><span class="line"></span><br><span class="line">  branch: master</span><br><span class="line"></span><br><span class="line">安装插件</span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">hexo发布至github</span><br><span class="line"></span><br><span class="line">设置github邮箱、用户名</span><br><span class="line"></span><br><span class="line">hexo g	生成</span><br><span class="line"></span><br><span class="line">hexo d	提交</span><br><span class="line"></span><br><span class="line">个性化主题</span><br><span class="line"></span><br><span class="line">hexo new page tags 	生成页面</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络</title>
    <url>/2021/04/26/internet/</url>
    <content><![CDATA[<p><img src="/2021/04/26/internet/blog3.jpeg" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">计算机网络如同一个遍布全球的蜘蛛网,将全世界连在一起。</font></p>
<a id="more"></a>

<h3 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h3><p><font size="3">计算机网络，是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。</font></p>
<p><font size="3">组成设备：<br>1、两台以上的计算机及终端组成<br>2、前端处理机（FEP）或通行处理机或通行控制处理机（CCP）<br>3、路由器、交换机等连接设备<br>4、通行线路</font><br><font size="3">计算机网络的软件部分包括 协议 和 应用软件 两部分；协议是计算机网络的核心，由 语法、语义、时序 构成</font></p>
<h3 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h3><p><font size="3">定义：将计算机网络体系结构的通行协议划分为七层；描述了网络活动的特点<br>应用层、表示层、会话层、传输层、网络层、数据链路层、物理层</font></p>
<h4 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h4><p><font size="3">应用层是操作系统或网络应用层析提供访问网络服务的接口；所有的应用程序的网络在此展开</font></p>
<h4 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h4><p><font size="3">表示层对上层数据或信息进行交换，保证一个主机应用层信息可以被另一个主机的应用程序理解；表示层完成对的数据转换：包括数据的加密、解密、压缩、格式转换等</font></p>
<h4 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h4><p><font size="3">会话层管理主机之间的会话进程，负责建立、管理、终止进程之间的会话（session缓存）；<br>会话层还利用在数据中插入校验点来实现数据的同步。</font><br><font size="3">有关会话层、表示层、应用层重点：<br>数据传输基本单位为报文<br>包含的主要协议：<br>FTP（文件传输协议）；<br>Telnet（远程登录协议）；<br>DNS（域名解析协议）；<br>SMTP（邮件传送协议）；<br>POPS协议（邮局协议）；<br>HTTP协议（HyPer Text Transfer Protocol）</font></p>
<h4 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h4><p><font size="3">传输层负责建立一个可靠的端到端（主机到主机）的链接，负责将上层数据分段并提供端到端的、可靠的或不可靠的传输；还要处理端到端的差错控制和流量控制问题</font></p>
<p><font size="3">有关传输层的重点：</font></p>
<p><font size="3">包含的主要协议：TCP协议（Transmission Control Protocol，传输控制协议、UDP协议（User Datagram Protocol，用户数据报协议）</font></p>
<h4 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h4><p><font size="3">网络层目的是实现两端系统之间的数据透明传送，具体功能包括寻址、路由选择、连接的建立、保持和终止等。它提供的服务使传输层不需要了解网络中的数据传输和交换技术。简单说就是”路由选择，路由及逻辑寻址“</font></p>
<p><font size="3">网络层涉及协议：IP协议:提供不可靠、无连接的传送服务，IP协议主要功能有：无连接数据报传输、数据报路由选择和差错控制。</font></p>
<p><font size="3">有关网络层的重点：<br>网络层负责对子网间的数据包进行路由选择；还可以实现拥塞控制、网际互联等功能；<br>基本数据单位是IP数据报<br>包括主要协议：IP协议、地址解析协议ARP、逆地址解析协议RARP、因特网报文协议ICMP、因特网组管理协议IGMP<br>重要的设备：路由器</font></p>
<h4 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h4><p><font size="3">数据链路层最基本的服务是将原子网络层来的数据可靠地传输到临结点的目标机网络层；数据组合成数据块，在数据链路层中数据块为帧（frame），帧是数据链路层的传送单位； 作用包括：物理地址寻址、数据封装成帧、流量控制、数据检错、重发等</font></p>
<p><font size="3">有关数据链路层的重点：<br>数据链路层为网路层提供可靠的数据传输<br>基本单位为帧<br>主要协议：以太网协议<br>两个重要设备：网桥、交换机</font></p>
<h4 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h4><p><font size="3">为上层协议提供一个传数据的可靠物理媒体，物理层确保原始的数据可在各种物理媒体上传输；物理层两个重要设备：中继器（repeater，也叫放大器）、接线器；物理层只负责传输0和1二进制bit流</font></p>
<h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><p><font size="3">数据传输基本单位为报文</font></p>
<p><font size="3">包含的主要协议：<br>FTP（文件传输协议）；<br>Telnet（远程登录协议）；<br>DNS（域名解析协议）；<br>SMTP（邮件传送协议）；<br>POPS协议（邮局协议）；<br>HTTP协议（HyPer Text Transfer Protocol）</font></p>
<h4 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h4><p><font size="3">Hypertext Transfer Protocol 超文本传输协议，基于请求与相应模式的、应用层和网络协议规定客户端和服务器的数据传输格式，就是一种约定；客户端和服务器通信实现细节</font><br><font size="3">网络模型：<br>应用层   —&gt;HTTP协议<br>传输层   —&gt;TCP协议/UDP协议<br>网络层  —-&gt;IP协议<br>物理层</font></p>
<p><font size="3">保持连接：http请求和响应，现在客户端和服务器建立tcp连接，不会完成一次http请求响应即关闭，可以在一次tcp连接上完成多次http请求和响应</font></p>
<h4 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h4><p><font size="3">uniform resource locator 统一资源定位符，互联网上标准资源的地址</font></p>
<p><font size="3">HTTP使用URL来建立连接和传输数据：如：如：<a href="http://www.itcast.cn:8080/news/index.html?uid=123&amp;page=1" target="_blank" rel="noopener">http://www.itcast.cn:8080/news/index.html?uid=123&amp;page=1</a><br>url格式：schema://host[:port#]/path/..[?query-string]<br>scheme：协议：“http”,常见协议有HTTP,HTTPS,FTP等<br>host：域名/IP：“<a href="http://www.iicast.cn&quot;,可以使用IP地址作为域名使用" target="_blank" rel="noopener">www.iicast.cn&quot;,可以使用IP地址作为域名使用</a><br>port：端口：“8080”，端口可省略，默认端口（HTTP:80，HTTPS:443，FTP:21)<br>path：资源路径：“/news/index.html”<br>query-string：发送参数：“uid=123&amp;page=1”,运行有多个参数，用”&amp;“作为分隔符</font></p>
<h4 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h4><p><font size="3">HTTP请求<br>由三部分组成：请求行、请求头、（空一行）、请求体</font></p>
<p><font size="3">常用请求方法<br>GET：从服务器获取资源<br>POST：在服务器新建一个资源<br>PUT：在服务器更新资源（客户提供改变后的完整资源）<br>DELETE：从服务器删除资源</font></p>
<p><font size="3">数据传输格式<br>1、键值对：？xx=11&amp;xxx=22<br>2、Json数据：<br>{<br>“属性名1” : “属性值”,<br>“属性名2” : “属性值”<br>}</font></p>
<h4 id="HTTP响应"><a href="#HTTP响应" class="headerlink" title="HTTP响应"></a>HTTP响应</h4><p><font size="3">由三部分组成：状态行(协议版本号、状态码、状态消息)、响应行、响应正文<br>状态码：三位数字组成<br>1xx：指示信息–表示请求已接收，继续处理<br>2xx：成功–表示请求已被成功接收、理解、接受<br>3xx：重定向–要完成请求必须进行更进一步的操作<br>4xx：客户端错误–请求有语法错误或请求无法实现<br>5xx：服务器端错误–服务器未能实现合法的请求</font></p>
<h4 id="TCP-IP协议"><a href="#TCP-IP协议" class="headerlink" title="TCP/IP协议"></a>TCP/IP协议</h4><p><font size="3">定义：网络通讯协议<br>1、应用层：应用程序之间互相沟通的层<br>2、传输层：提供了数据传送，应用程序之间的通信服务<br>3、网络互联层：负责提供基本的数据封包传送功能，让数据包到达目的主机<br>4、网络接口层：接收数据，并进行传输</font></p>
<h3 id="Windows网络命令"><a href="#Windows网络命令" class="headerlink" title="Windows网络命令"></a>Windows网络命令</h3><p><font size="3">1、ping命令：用于检测网络是否畅通，以及网络时延情况（工作在ICMP协议上）</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping 主机名</span><br><span class="line">ping 域名</span><br><span class="line">ping IP地址</span><br></pre></td></tr></table></figure>

<p><font size="3">2、ipconfig命令：显示当前TCP/IP配置的设置信息，检验人工设置的TCP/IP设置是否正确；了解计算机是否成功租用到了一个IP地址</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig:不带任何参数时，显示每个已近配置了的接口的IP地址、子网掩码和缺省网关值</span><br><span class="line"></span><br><span class="line">ipconfig&#x2F;all:当使用all选项时，ipconfig能为DNS和WINS服务器显示它已近配置且所有使用的附加信息；能够显示内置于本地网卡中的物理地址（MAC）</span><br><span class="line"></span><br><span class="line">ipconfig&#x2F;release和ipconfig&#x2F;renew：这两个附加选项，只能在向DHCP服务器租用IP地址的计算机使用。输入ipconfig &#x2F;release，所有接口的租用IP地址便重新交付给DHCP服务器(归还IP地址)。输入ipconfig&#x2F;renew，本地计算机便设法与DHCP服务器取得联系，并租用一个IP地址。大多数情况下网卡将被重新赋予和以前所赋予的相同的IP地址。</span><br></pre></td></tr></table></figure>

<p><font size="3">3、arp命令（地址转换协议）</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ARP是TCP&#x2F;IP协议族中的一个重要协议，用于确定对应IP地址的网卡物理地址。使用arp命令，能够查看本地计算机或另一台计算机的ARP高速缓存中的当前内容。</span><br><span class="line"></span><br><span class="line">arp -a:用于查看高速缓存中的所有项目</span><br></pre></td></tr></table></figure>

<p><font size="3">4、netstat命令</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况</span><br><span class="line">netstat -a	&#x2F;&#x2F; 显示所有连接和监听端口</span><br><span class="line">netstat -n	&#x2F;&#x2F; 以数字格式显示IP地址</span><br><span class="line">netstat -o	&#x2F;&#x2F; 显示每个连接所属的处理id</span><br></pre></td></tr></table></figure>

<p><font size="3">5、net命令</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、net view 查看远程主机的所有共享资源	</span><br><span class="line">net view &#x2F;IP</span><br><span class="line"></span><br><span class="line">2、net use	把远程主机的某个共享资源映射到本地盘符，图形界面方法使用</span><br><span class="line">net use:&#x2F;IP&#x2F;sharename</span><br><span class="line"></span><br><span class="line">3、net start	启动远程主机上的服务，当和远程主机建立连接，发现它的某些服务没有启动使用此命令</span><br><span class="line">net start servername</span><br><span class="line"></span><br><span class="line">4、net stop	关闭主机的某个服务</span><br><span class="line"></span><br><span class="line">5、net user	查看和账户有关的情况，包括新建账户、删除账户、查看特定账户、激活或禁用账户</span><br><span class="line">net user abcd 1234 &#x2F;add，新建一个用户名为abcd,密码为1234的账号，默认为user组成</span><br><span class="line">net user abcd &#x2F;del，将用户名为abcd的用户删除</span><br><span class="line">net user abcd &#x2F;active:no，将用户名为abcd的用户禁用</span><br><span class="line">net user abcd &#x2F;active:yes，激活用户名为abcd的用户</span><br><span class="line">net user abcd，查看用户名为abcd的用户的情况</span><br><span class="line"></span><br><span class="line">6、net localgroup	查看所有和用户组有关的信息和进行相关操作</span><br><span class="line">netlocalgroup roupname username &#x2F;add</span><br><span class="line"></span><br><span class="line">7、net time	查看远程主机当前的时间</span><br></pre></td></tr></table></figure>



<h3 id="常用DOS指令"><a href="#常用DOS指令" class="headerlink" title="常用DOS指令"></a>常用DOS指令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">win+R	cmd运行窗口</span><br><span class="line"></span><br><span class="line">1、ipconfig&#x2F;all		查看电脑物理地址（mac)信息</span><br><span class="line"></span><br><span class="line">2、arp -a	查看IP地址和物理地址对应关系</span><br><span class="line"></span><br><span class="line">3、ping 网络地址  	查看当前计算机和要访问的计算机之间的连通情况（如ping www.baidu.com)</span><br><span class="line"></span><br><span class="line">4、cls		清屏</span><br><span class="line"></span><br><span class="line">5、盘符：	切换对应的盘符</span><br><span class="line"></span><br><span class="line">6、cd 文件名	进入对应的文件夹（目录）</span><br><span class="line"></span><br><span class="line">7、dir		显示文件夹中的文件目录</span><br><span class="line"></span><br><span class="line">8、cd..		返回上一级</span><br><span class="line"></span><br><span class="line">9、cd&#x2F;		返回根目录</span><br><span class="line"></span><br><span class="line">10、md 文件夹名称		新建文件夹</span><br><span class="line"></span><br><span class="line">11、rd 名字  		删除目录，(不能删除有内容的文件夹）</span><br><span class="line">D:\Users\Administrator&gt;rd D:\Users\Administrator\6</span><br><span class="line"></span><br><span class="line">12、copy 想复制的目录结构和名字   目标目录</span><br><span class="line">D:\Users\Administrator&gt;copy D:\Users\Administrator\6\1.txt D:\Users\Administrator\7</span><br><span class="line">已复制         1 个文件。</span><br><span class="line"></span><br><span class="line">13、move 想剪切的目录结构和名字   目标目录</span><br><span class="line">D:\Users\Administrator&gt;move D:\Users\Administrator\6\1.txt D:\Users\Administrator\7</span><br><span class="line">移动了         1 个文件</span><br><span class="line"></span><br><span class="line">14、del 文件路径\名字	删除目录内的所有文件，注意：如果只写目录，会删除该目录中</span><br><span class="line"></span><br><span class="line">15、del *.*		删除当前目录中的所有文件（不是文件夹）</span><br><span class="line"></span><br><span class="line">16、del 具体的文件目录和名字		可以单独删除某一个文件</span><br><span class="line">D:\1\2\5&gt;del D:\1\2\5\a.txt</span><br><span class="line"></span><br><span class="line">17、format：盘符	格式化，清空数据</span><br><span class="line"></span><br><span class="line">18、键盘上、下、重复之前的代码</span><br><span class="line"></span><br><span class="line">19、exit		关闭dos窗口	</span><br><span class="line"></span><br><span class="line">20、Ctrl+C	退出当前执行的命令</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>测试使用</category>
      </categories>
      <tags>
        <tag>命令</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL</title>
    <url>/2021/05/13/mysql_db/</url>
    <content><![CDATA[<img src="/2021/05/13/mysql_db/db.png" style="zoom:70%">

<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">数据库是“按照数据结构来组织、存储和管理数据的仓库”。</font></p>
<a id="more"></a>


<h3 id="数据库介绍"><a href="#数据库介绍" class="headerlink" title="数据库介绍"></a>数据库介绍</h3><p><font size="3">数据库是一个长期存储在计算机内的、有组织的、可共享的、统一管理的大量数据的集合。是存储店址文件的处所，用户可以对文件中的数据进行新增、查询、更新、删除等操作。</font></p>
<p><font size="3">表是数据库中存储数据的基本单位</font></p>
<h4 id="数据库类型"><a href="#数据库类型" class="headerlink" title="数据库类型"></a>数据库类型</h4><p><font size="3">RDBMS    (Relational Database Management System) 关系型数据库系统；关系型数据库最典型的数据结构是表，由二位表及其之间的联系所组成的一个数据组织。<br>数据行（一条记录）一个事务的信息）<br>数据列（字段）一个事务的某一个属性<br>数据表（数据行的集合）<br>数据库（数据表的集合，一个数据库中能够有n多个数据表）<br>关系型数据库：Oracle、MySQL、SQLite、DB2、SQL Server、Microsoft Acess<br>非关系型数据库:临时性键值存储（memcached Redis)、永久性键值存储（ROMA Redis)、面向文档的数据库（MongoDB、CouchDB）、面向列的数据库（Cassandra、HBase）</font></p>
<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p><font size="3">关系型数据库优势：<br>1.易于维护：都是使用表结构，格式一致<br>2.使用方便：SQL语言通用，可用于复杂查询<br>3.复杂操作：支持SQL，可以进行join等复杂查询，可用于一个表以及多个表之间非常复杂的查询<br>4.事务支持使得对于安全性能很高的数据访问要求得以实现<br>5.由于以标准化为前提，数据更新的开销很小（相同的字段基本上都只有一处）<br>缺点：<br>1.读写性能比较差，尤其是海量数据的高效率读写<br>2.固定的表结构，灵活度稍欠<br>3.高并发读写需求，传统关系型数据库来说，硬盘I/O是一个很大的瓶颈</font></p>
<p><font size="3">非关系型数据库优势：<br>1.格式灵活：存储数据的格式可以是key，value形式、文档形式、图片形式、文档形式<br>2.速度快：nosql可以使用硬盘或者随机存储器作为载体，而关系型数据库只能使用硬盘；<br>3.高扩展性：基于键值对，数据之间没有耦合性，所有非常容易水平拓展<br>4.成本低：nosql数据库部署简单，基本都是开源软件<br>5.易于数据的分散，分布式数据库<br>缺点：<br>1.不提供关系型数据库对事物的处理，nosql数据库只应用在特定领域，基本上不进行复杂的处理</font></p>
<h3 id="mysql数据库"><a href="#mysql数据库" class="headerlink" title="mysql数据库"></a>mysql数据库</h3><p><font size="3">SQL    Structured Query Language 结构化查询语言<br>数据类型与约束：为准去存储数据，保证数据正确有效</font></p>
<h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><font size="3">

<pre><code>1.int：整数，有符号范围（-2147483648~2142147483648）一个int占4个字节，一个字节8位 

2.decimal：小数，如decimal(5,2)，表示共存5位数，小数占2位，整数占3位

3.varchar：字符串，范围（0~65533），varchar(3)表示最多存3个字符，一个中文或字母占一个字符

4.datetime：日期时间，范围（1000-01-01 00:00:00~9999-12-31 59:59:59）

5.tinyint：范围小的整数，带符号的范围-128到127，无符号的0-256</code></pre></font>


<h4 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h4><font size="3">

<pre><code>1.primary key：主键，物理上存储的顺序；字段值必须唯一，且不能为null，一般字段名叫id，int类型、无符号、自动递增

2.not null：非空，此字段不允许填写空值

3.unique：唯一，此字段的值不允许重复

4.default：默认值，当不填写时会使用默认值

5.foreign key：外键，维护两个表之间的关联关系

6.unsigned：无符号

7.auto_increment；自动递增，插入时需要占位，通常使用0或者default或null占位</code></pre></font>


<h3 id="SQL命令"><a href="#SQL命令" class="headerlink" title="SQL命令"></a>SQL命令</h3><h4 id="一、数据库操作"><a href="#一、数据库操作" class="headerlink" title="一、数据库操作"></a>一、数据库操作</h4><p><font size="3">创建数据库</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database 数据库名；</span><br><span class="line"></span><br><span class="line">create database departments</span><br></pre></td></tr></table></figure>

<p><font size="3">选择数据库</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use 数据库名；</span><br><span class="line"></span><br><span class="line">use departments;</span><br></pre></td></tr></table></figure>

<p><font size="3">删除数据库</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drop database 数据库名；</span><br><span class="line"></span><br><span class="line">drop database department;</span><br></pre></td></tr></table></figure>



<h4 id="二、数据表"><a href="#二、数据表" class="headerlink" title="二、数据表"></a>二、数据表</h4><p><font size="3">创建数据表</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">	字段名 类型 约束,</span><br><span class="line">	字段名 类型 约束</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">create table man(</span><br><span class="line">	id int unsigned primary key auto_increment,</span><br><span class="line">	name varchar(12) not null,</span><br><span class="line">	age int(4) unsigned not null,</span><br><span class="line">	height decimal(5,2)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p><font size="3">删除数据表</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drop table 数据表名；</span><br><span class="line"></span><br><span class="line">drop table man；</span><br></pre></td></tr></table></figure>



<h4 id="三、数据操作"><a href="#三、数据操作" class="headerlink" title="三、数据操作"></a>三、数据操作</h4><p><font size="3">1、增</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into 表名 valus(...)</span><br><span class="line">insert into 表名 (字段1,..) values(值1,..)</span><br><span class="line">insert into 表名 values (a值1,a值2,..),(b值1,b值2,..)</span><br><span class="line"></span><br><span class="line">insert into man values(1,&#39;Jamies&#39;,20,173.23)</span><br><span class="line">insert into man (name,age,height) values(&#39;Alice&#39;,21,172.45)</span><br><span class="line">insert into man values(0,&#39;Tom&#39;,18,165.34),(1,&#39;Jack&#39;,19,174.64)</span><br></pre></td></tr></table></figure>

<p><font size="3">2、删</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">delete from 表名 where 条件</span><br><span class="line"></span><br><span class="line">delete from man where id&#x3D;1;</span><br><span class="line"></span><br><span class="line">逻辑删除，给表添加字段，代表数据是否是删除，</span><br><span class="line">一般起名isdelete,0代表未删除，1代表删除</span><br></pre></td></tr></table></figure>

<p><font size="3">3、改</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update 表名 set 字段1&#x3D;值1，字段2&#x3D;值2...where 条件</span><br><span class="line"></span><br><span class="line">update man set age&#x3D;20 </span><br><span class="line">where name&#x3D;&#39;Tom&#39;</span><br></pre></td></tr></table></figure>

<p><font size="3">4、查</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from 表名 where 条件</span><br><span class="line"></span><br><span class="line">select * from man</span><br><span class="line">where name&#x3D;&#39;Jameis&#39;</span><br></pre></td></tr></table></figure>



<h4 id="四、查询"><a href="#四、查询" class="headerlink" title="四、查询"></a>四、查询</h4><p><font size="3">1、where</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">比较运算：</span><br><span class="line">&#x3D;	等于</span><br><span class="line">&lt;&gt;,!&#x3D;	不等于</span><br><span class="line">&gt;,&gt;&#x3D;	大于,大于等于</span><br><span class="line">&lt;,&lt;&#x3D;	小于,小于等于</span><br><span class="line">逻辑运算：and、or、not</span><br><span class="line">模糊范围：like、%表示任意多个字符、_表示一个任意字符（like &#39;%伟%&#39;、like&#39;李_&#39;)</span><br><span class="line">范围查询：in 表示在一个非连续的范围	between..and..表示在一个连续的范围</span><br><span class="line">	select * from students where hometown in(&#39;北京&#39;,&#39;上海&#39;,&#39;杭州&#39;)</span><br><span class="line">	select * from students wehere age between 18 and 20</span><br><span class="line">空判断：判空is null	注意：null与&#39; &#39;空字符串是不同的</span><br></pre></td></tr></table></figure>

<p><font size="3">2、order by 排序</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from 表名</span><br><span class="line">order by 列1, asc|desc,列1，asc|desc</span><br><span class="line"></span><br><span class="line">asc	从小到大排序，升序，默认</span><br><span class="line">desc 从大到小排序，降序</span><br></pre></td></tr></table></figure>

<p><font size="3">3、group by 分组</font> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">按照字段相同数据放到一个组；可对分组后的数据进行统计，作聚合云散</span><br><span class="line">select 列1，列2，聚合.. from 表名 group by 列1，列2</span><br><span class="line"></span><br><span class="line">按性别分组，统计男女人数</span><br><span class="line">select sex,count(*) from students group by sex</span><br></pre></td></tr></table></figure>

<p><font size="3">4、having 分组后数据筛选</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select 列1，列2，聚合.. from 表名</span><br><span class="line">where 条件</span><br><span class="line">group by 列1，列2</span><br><span class="line">having 列1..聚合..</span><br><span class="line"></span><br><span class="line">查询男生总人数</span><br><span class="line">select count(*) from students </span><br><span class="line">where sex&#x3D;&#39;男&#39;</span><br><span class="line">或</span><br><span class="line">select sex,count(*) from students </span><br><span class="line">group by sex</span><br><span class="line">having sex&#x3D;&#39;男&#39;</span><br><span class="line"></span><br><span class="line">对比where与having</span><br><span class="line">	where是对from后面指定的表进行数据筛选，属于对原始数据的筛选</span><br><span class="line">	having是对group by的结果进行筛选</span><br><span class="line">多个字段分组</span><br><span class="line">查询1班除外其他班级学生的平均年龄、最大年龄、最小年龄</span><br><span class="line">select class,avg(age),max(age),min(age) from studets</span><br><span class="line">group by class</span><br><span class="line">having class!&#x3D;&#39;1班&#39;</span><br></pre></td></tr></table></figure>

<p><font size="3">5、连接查询</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、等值连接查询：生成临时表，然后临时表中使用关联的字段进行过滤</span><br><span class="line">select * from 表1，表2</span><br><span class="line">where 表1.列&#x3D;表2.列</span><br><span class="line"></span><br><span class="line">查询学生信息及学生的成绩</span><br><span class="line">select * from students as stu,scores as sc</span><br><span class="line">where stu.studentNo&#x3D;sc.studentNo</span><br><span class="line"></span><br><span class="line">2、inner join 内连接或等值连接：获取连个表中字段匹配关系的记录</span><br><span class="line">select * from 表1</span><br><span class="line">inner join 表2  on 表1.列&#x3D;表2.列</span><br><span class="line"></span><br><span class="line">两个表</span><br><span class="line">select * from students as stu </span><br><span class="line">inner join scores as sc on stu.studentNo&#x3D;sc.studentNo</span><br><span class="line"></span><br><span class="line">3、left join 左连接：获取左表所有记录，对右表中不存在的数据使用null</span><br><span class="line">select  *  from  表1</span><br><span class="line">left  join  表2  on  表1.列&#x3D;表2.列</span><br><span class="line"></span><br><span class="line">查询所有学生的成绩，包括没有成绩的学生</span><br><span class="line">select * from students as stu</span><br><span class="line">left join scores as sc on stu.studentNo&#x3D;sc.studentNo</span><br><span class="line"></span><br><span class="line">select *  from table1 left join tbale2 on table1.id&#x3D;table2.id</span><br><span class="line">这条sql语句返回结果：table1表中的数据全部返回，table2表中的数据只返回满足where条件的</span><br><span class="line"></span><br><span class="line">4、right join 右连接：获取右表所有记录，对于左边中不存在的数据使用null</span><br><span class="line">select  *  from  表1</span><br><span class="line">right join  表2  on  表1.列&#x3D;表2.列</span><br><span class="line"></span><br><span class="line">select * from table1 right join table2 on table1.id&#x3D;table2.id</span><br><span class="line">这条sql语句返回结果：table2表中的数据全部返回，table1表中的数据只返回满足where条件的</span><br></pre></td></tr></table></figure>



<h4 id="五、mysql事务"><a href="#五、mysql事务" class="headerlink" title="五、mysql事务"></a>五、mysql事务</h4><p><font size="3">1、事务介绍</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">事务主要用户处理操作量大、复杂度高的数据</span><br><span class="line">事务广泛运用于订单系统，银行系统等多种场景</span><br><span class="line">维护数据一致性，保证每个事务结束时，都能保持数据一致性</span><br><span class="line">事务命令</span><br><span class="line">表的引擎类型必须是innodb类型才可以使用事务，mysql表的默认引擎，engine&#x3D;innodb</span><br><span class="line">提交</span><br><span class="line">回滚</span><br></pre></td></tr></table></figure>

<p><font size="3">2、事务控制语句</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">begin或start transaction；显示地开启一个事务</span><br><span class="line">commit或commit work，提交事务，并使已对数据库进行的所有修改成为永久性</span><br><span class="line">rollback或rollback work，回滚会结束用户的事务，并撤销正在进行的所有未提交的修改</span><br></pre></td></tr></table></figure>



<h4 id="六、字段操作"><a href="#六、字段操作" class="headerlink" title="六、字段操作"></a>六、字段操作</h4><p><font size="3">1、增</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table 表名</span><br><span class="line">add 列名 新增字段类型；</span><br><span class="line"></span><br><span class="line">alter table man</span><br><span class="line">add isdelete int(2);</span><br></pre></td></tr></table></figure>

<p><font size="3">2、删</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table 表名</span><br><span class="line">drop 字段名；</span><br><span class="line"></span><br><span class="line">alter table man</span><br><span class="line">drop isdelete</span><br></pre></td></tr></table></figure>

<p><font size="3">3、改</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table 表名 modify 字段名 字段类型</span><br><span class="line"></span><br><span class="line">把字段isdelete的类型从int(2)改为char(1)</span><br><span class="line">alter table man modify isdelete char(1)</span><br></pre></td></tr></table></figure>

<p><font size="3">4、别名as、去重distinct</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from students as stu</span><br><span class="line"></span><br><span class="line">selete distinct 列1，..from 表名</span><br></pre></td></tr></table></figure>



<h4 id="七、索引"><a href="#七、索引" class="headerlink" title="七、索引"></a>七、索引</h4><p><font size="3">索引介绍</font></p>
<p><font size="3">索引index</font></p>
<p><font size="3">帮助mysql高效获取数据的数据结构，理解为“排好序的快速查找数据结构</font></p>
<p><font size="3">作用：提高数据检索效率，降低数据库的IO成本，通过索引对数据进行排序，降低数据排序的成本，降低CPU的消耗</font></p>
<p><font size="3">缺点：索引也是一张表，保存了主键与索引字段，并指向实体表的记录，占用空间提供查询速度，降低更新表的速度，如对表进行inster、updata、dalete，因为要对索引进行更新维护，增加了额外的开销，影响速度</font></p>
<p><font size="3">1、创建普通索引</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)创建索引</span><br><span class="line">create index index_name </span><br><span class="line">on table_name(column_list)</span><br><span class="line"></span><br><span class="line">（2)创建表的时候直接指定</span><br><span class="line">create table table_name(</span><br><span class="line">	id int not null,</span><br><span class="line">	username varchar(16) not null,</span><br><span class="line">	index index_name (column_list)</span><br><span class="line">);</span><br><span class="line">创建一个简单的索引，名为 &quot;PersonIndex&quot;，在 Person 表的 LastName 字段</span><br><span class="line">create index PersonIndex</span><br><span class="line">on Person(LastName)</span><br></pre></td></tr></table></figure>

<p><font size="3">2、创建唯一索引</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)创建索引</span><br><span class="line">create unique index index_name on table_name(column_list)</span><br><span class="line"></span><br><span class="line">（2)创建表的时候直接指定</span><br><span class="line">create table table_name(</span><br><span class="line">	id int not null,</span><br><span class="line">	username varchar(16) not null,</span><br><span class="line">	unique index_name (column_list)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><font size="3">3、删除索引</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drop index index_name on table_name;</span><br></pre></td></tr></table></figure>

<p><font size="3">4、使用alter命令添加和删除索引</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">添加索引</span><br><span class="line">1、主键索引 primary key  唯一性，不允许为空值</span><br><span class="line">ALTER TABLE &#39;table_name&#39; ADD PRIMARY KEY(&#39;col&#39;);</span><br><span class="line"></span><br><span class="line">2、唯一索引 unique  唯一性、允许为空值</span><br><span class="line"> ALTER TABLE &#39;table_name&#39; ADD UNIQUE(&#39;col&#39;);</span><br><span class="line"> </span><br><span class="line">3、普通索引 index 无限制</span><br><span class="line"> ALTER TABLE &#39;table_name&#39; ADD INDEX index_name(&#39;col&#39;);</span><br><span class="line"> </span><br><span class="line">4、全文索引 fulltext 仅用于MyISAM和noDB,针对较大数据，消耗空间</span><br><span class="line">ALTER TABLE &#39;table_name&#39; ADD FULLTEXT(&#39;col&#39;);</span><br><span class="line"></span><br><span class="line">5、组合索引 </span><br><span class="line">为了更多的提高mysql效率可建立组合索引，遵循“最左前缀”原则。</span><br><span class="line">创建复合索引应该将最常用（频率）做限制条件的列放在最左边，依次递减</span><br><span class="line">ALTER TABLE &#39;table_name&#39; ADD INDEX index_name(&#39;col1&#39;,&#39;col2&#39;,&#39;col3&#39;);</span><br><span class="line"></span><br><span class="line">添加索引实例</span><br><span class="line">alter table table_name add index (c)</span><br><span class="line"></span><br><span class="line">删除索引</span><br><span class="line">alter table table_name drop index c;</span><br></pre></td></tr></table></figure>

<h4 id="八、foreign-key-外键"><a href="#八、foreign-key-外键" class="headerlink" title="八、foreign key 外键"></a>八、foreign key 外键</h4><p><font size="3">如果一个实体的某个字段指向另一个实体的主键，称为外键，但外键会降低表更新效率，外键被主表约束</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看外键</span><br><span class="line">show create table 表名</span><br><span class="line"></span><br><span class="line">一、创建数据表的时候设置外键约束</span><br><span class="line">create table class(</span><br><span class="line">	id int unsigned primary key auto_increment,</span><br><span class="line">	name varchar(10)</span><br><span class="line">);</span><br><span class="line">create table student(</span><br><span class="line">	name varchar(10),</span><br><span class="line">	foreign key(class_id) references class(id)</span><br><span class="line">);</span><br><span class="line">foreign key(自己的字段) references 主表（主表字段)</span><br><span class="line"></span><br><span class="line">二、对已存在的数据表设置外键约束</span><br><span class="line">alter table 字表名</span><br><span class="line">add foreign key (子表字段) references 主表名(主表字段)</span><br><span class="line"></span><br><span class="line">删除外键</span><br><span class="line">alter table 表名 </span><br><span class="line">drop foreign key 外键名称</span><br></pre></td></tr></table></figure>

<h3 id="数据库优化"><a href="#数据库优化" class="headerlink" title="数据库优化"></a>数据库优化</h3><p><font size="3">1、优化查询语句</font></p>
<p><font size="3">能分开写的语句就分开写，不要一次性解决，这样对效率来说是很大的开销；相同类型字段进行比较；尽量避免在where字句中对字段进行函数或表达式操作；少用like关键字和通配符查询，这是牺牲系统性能为代价的</font></p>
<p><font size="3">2、选取合适的字段属性</font></p>
<p><font size="3">数据库中表越小查询越快，可以将表中字段的宽度设得尽可能小；尽量把字段设置为NOTNULL，这样在执行查询的时，数据库不用去比较NULL值；避免使用不兼容的数据类型；如 float 和 int，char 和 varchar 等都是不兼容</font></p>
<p><font size="3">3、使用索引</font></p>
<p><font size="3">索引是提高数据库性能的常用方法，它可以令数据库服务器以比没有索引快得多的速度检索特定的行，尤其是在查询语句当中包含有MAX(),MIN()和ORDERBY这些命令的时候，性能提高更为明显；尽量不要对数据库中某个含有大量重复的值的字段建立索引；避免使用 is not null、in 等一些无法让系统使用索引操作的词</font></p>
<p><font size="3">4、锁定表：可以维护数据的完整性</font></p>
<p><font size="3">5、使用外键：使用外键关联数据，但外键会降低表更新效率</font></p>
<p><font size="3">6、合理使用 exists, not exists字句</font></p>
<p><font size="3">7、使用连接（join）来代替子查询(sub-queries)</font></p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>命令</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>Postman</title>
    <url>/2021/05/29/postman/</url>
    <content><![CDATA[<img src="/2021/05/29/postman/blog13.png" style="zoom:75%">

<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">Postman是一个可扩展的API开发和接口测试工具。</font></p>
<a id="more"></a>

<p><font size="3"></font></p>
<h3 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a>Postman</h3><p><font size="3">Postman: 简单方便的接口调试工具，便于分享和协作。具有接口调试，接口集管理，环境配置，参数化，断言，批量执行，录制接口，Mock Server, 接口文档， 接口监控等功能。</font></p>
<h5 id="postman工作原理"><a href="#postman工作原理" class="headerlink" title="postman工作原理"></a>postman工作原理</h5><p><font size="3">postman地址栏输入请求地址，send发送请求给服务器，服务器响应，对数据进行处理，然后返回给postman对返回内容进行加工处理，把格式化后的内容显示出来。</font></p>
<h5 id="环境变量和全局变量"><a href="#环境变量和全局变量" class="headerlink" title="环境变量和全局变量"></a>环境变量和全局变量</h5><p><font size="3">环境管理中还可以点击“Global”添加全局变量，环境变量只有当选择了该环境时才生效，全局变量在任何环境中都生效，测试集中的变量只在当前测试集生效；<br>    当测试集变量，环境变量，全局变量有重复的变量名时，优先级为：环境变量&gt;全局变量&gt;测试集变量。</font></p>
<p><font size="3">添加环境变量：设置-add-环境变量信息填写<br>环境变量使用方法: 选择环境,在请求URL或者请求Body里使用来使用环境变量，变量可以在请求Body的各种格式中使用，但不能直接在请求前脚本(Pre-request Script)和请求后脚本(Tests)中使用。</font></p>
<img src="/2021/05/29/postman/postman1.png" style="zoom:70%">



<h5 id="请求设计"><a href="#请求设计" class="headerlink" title="请求设计"></a>请求设计</h5><p><font size="3">form-data混合表单格式传参示例（上传文件-选择file类型，传文本选择text类型）;<br>x-www-form-urlencoded（文本表单）;<br>raw：原始格式，支持json和xml格式;<br>binary：二进制格式，用于发送二进制数据流;<br>Pre-request Script：请求前脚本，Javascript语法，用于在发送请求前生成一些动态数据或做一些处理;<br>Tests：请求后脚本，Javascript语法，用于请求返回后做一些处理或断言结果<br></font></p>
<h5 id="Tests断言"><a href="#Tests断言" class="headerlink" title="Tests断言"></a>Tests断言</h5><p><font size="3"><a href="http://apis.juhe.cn/simpleWeather/query?city=深圳&amp;key=0a5b806300f8055ff7c6e9f699a8c4e6" target="_blank" rel="noopener">http://apis.juhe.cn/simpleWeather/query?city=深圳&amp;key=0a5b806300f8055ff7c6e9f699a8c4e6</a></font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	</span><br><span class="line">&#x2F;&#x2F;判断响应状态码是否等于200</span><br><span class="line">pm.test(&quot;Status code is 200&quot;, function () &#123;</span><br><span class="line">    pm.response.to.have.status(200);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;判断响应体数据是否等于指定的字符串</span><br><span class="line">pm.test(&quot;Body matches string，深圳&quot;, function () &#123;</span><br><span class="line">    pm.expect(pm.response.text()).to.include(&quot;深圳&quot;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 校验响应的JSON数据</span><br><span class="line">pm.test(&quot;校验城市天气&quot;, function () &#123;</span><br><span class="line">    var jsonData &#x3D; pm.response.json();</span><br><span class="line">    pm.expect(jsonData.result.city).to.eql(&quot;深圳&quot;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 获取响应数据中的token，设置为环境变量</span><br><span class="line">&#x2F;&#x2F; var response &#x3D; JSON.parse(responseBody);</span><br><span class="line">&#x2F;&#x2F; postman.setEnvironmentVariable(&quot;token&quot;, response.data.token);</span><br><span class="line">&#x2F;&#x2F; console.log(response.data.token)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 获取响应数据中的token，设置为环境变量</span><br><span class="line">var jsonData &#x3D; pm.response.json();</span><br><span class="line">pm.environment.set(&quot;token&quot;, jsonData.data.token);</span><br><span class="line">console.log(jsonData.data.token)</span><br></pre></td></tr></table></figure>
<img src="/2021/05/29/postman/postman2.png" style="zoom:80%">


<h5 id="批量发送请求"><a href="#批量发送请求" class="headerlink" title="批量发送请求"></a>批量发送请求</h5><font size="3">
Runner：批量执行测试集,支持设置迭代次数,支持加载csv或json、txt类格式测试数据。</font>
<font size="3">
一：创建txt或者csv文件（这里以txt文件为例）在首行写入变量名称，以逗号隔开

<img src="/2021/05/29/postman/postman3.png" style="zoom:90%">
<img src="/2021/05/29/postman/postman4.png" style="zoom:80%">

<p>二：在接口请求参数填入变量，格式为</p>
<img src="/2021/05/29/postman/postman5.png" style="zoom:80%">

<p>三：在Tests进行断言</p>
<img src="/2021/05/29/postman/postman2.png" style="zoom:83%">

<p>四：点击Runner,找到测试的接口，选择环境变量，选择测试数据txt或者csv文件，格式，迭代次数</p>
<img src="/2021/05/29/postman/postman6.png" style="zoom:70%">


<p>五：点击Run,查看测试结果</p>
<img src="/2021/05/29/postman/postman7.png" style="zoom:45%">

</font>


]]></content>
      <categories>
        <category>接口测试</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>postman</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux命令</title>
    <url>/2021/04/30/linux/</url>
    <content><![CDATA[<p><img src="/2021/04/30/linux/blog6.jpg" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">Linux是一套免费使用和自由传播的类Unix操作系统，它主要受到Minix和Unix思想的启发，是一个基于POSIX和Unix的多用户、多任务、支持多线程和多CPU的操作系统。它支持32位和64位硬件。Linux继承了Unix网络为和兴的设计思想，是一个性能稳定的多用户网络操作系统。</font></p>
<a id="more"></a>


<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><h5 id="Linux特点"><a href="#Linux特点" class="headerlink" title="Linux特点"></a>Linux特点</h5><p><font size="3">稳定、免费<br>安全性高<br>多任务，多用户<br>耗资源少<br>内核下，它支持多种电子产品，Android手机，PDA</font></p>
<h5 id="Linux和Windows的区别"><a href="#Linux和Windows的区别" class="headerlink" title="Linux和Windows的区别"></a>Linux和Windows的区别</h5><p><font size="3">1、使用费用不同：<br>​    Linux是开源项目，免费<br>​    Windows是需要付费</font></p>
<p><font size="3">2、适用使用对象不同：<br>​    Linux适合企业公司服务器系统架构<br>​    Windows适合大众使用</font></p>
<p><font size="3">3、操作风格不同：<br>​    Linux很多情况需要通过命令来进行操作<br>​    Windows面向大众化，操作上符合普通人操作习惯，大多是通过界面的操作</font></p>
<p><font size="3">4、支持的软件不同：<br>​    Linux平台只有开发者维护，缺少资金的大量支持，软件方面数量和质量缺乏<br>​    Windows使用人数较多，支持Windows软件在数量和质量上都比Linux有优势</font></p>
<p><font size="3">5、文件格式不同：<br>​    Linux是shell<br>​    Windows操作系统内核是NT</font></p>
<p><font size="3">6、安全性不同：<br>​    Linux相比Windows安全很多，使用Linux是不需要安装额外的安全软件<br>​    Windows系统安全性低，需要安装安全防护软件来保护计算机</font></p>
<p><font size="3">7、可定制性：<br>​    Linux提供更高的定制性，支持开发者通过编码来定义适合自己的操作系统<br>    Windows操作范围大多收到微软的限制，基本上是系统怎样设置，用户就只能规矩操作</font></p>
<p><font size="3">8、程序可移植性不同：<br>​    Linux可移植性好，不仅可以在不同的Linux之间移植，还可以移植到Windows上<br>    Windows的程序可移植性差，程序基本不兼容Linux</font></p>
<h3 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h3><h5 id="虚拟机介绍"><a href="#虚拟机介绍" class="headerlink" title="虚拟机介绍"></a>虚拟机介绍</h5><p><font size="3">安装虚拟机，通过虚拟机安装Linux操作系统<br>虚拟机：一台虚拟的计算机，通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。</font></p>
<p><img src="/2021/04/30/linux/win.png" alt></p>
<p><font size="3">虚拟机软件：<br>​    VMware Workstation:是一款功能强大的桌面虚拟计算机软件，收费。<br>​    VirtualBox:是一款开源虚拟机软件。</font></p>
<h5 id="虚拟机及Linux安装"><a href="#虚拟机及Linux安装" class="headerlink" title="虚拟机及Linux安装"></a>虚拟机及Linux安装</h5><p><font size="3">将杀毒软件、防火墙关闭<br>使用管理员权限进行安装<br>5个服务需要启动<br>Linux安装：<br>切换鼠标、键盘    Ctri+alt<br>Linux系统：管理员：root    密码：123456</font></p>
<h5 id="Linux目录介绍"><a href="#Linux目录介绍" class="headerlink" title="Linux目录介绍"></a>Linux目录介绍</h5><p><img src="/2021/04/30/linux/Linux.png" alt></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;：Linux系统根目录&lt;&#x2F;font&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;etc：（etcetera)系统配置文件存放的目录，不建议在此目录存放可执行文件</span><br><span class="line"></span><br><span class="line">&#x2F;usr：（unix shared resources)应用程序存放目录</span><br><span class="line"></span><br><span class="line">&#x2F;root：系统管理员root的家目录</span><br><span class="line"></span><br><span class="line">&#x2F;home：家目录，每个用户登录Linux之后，默认进入的目录</span><br><span class="line"></span><br><span class="line">&#x2F;lost+found：系统异常产生错误时，将一些遗失的片段放置此目录下</span><br></pre></td></tr></table></figure>


<h3 id="Linux常用命令-重点"><a href="#Linux常用命令-重点" class="headerlink" title="Linux常用命令 [重点]"></a>Linux常用命令 [重点]</h3><h5 id="磁盘管理命令"><a href="#磁盘管理命令" class="headerlink" title="磁盘管理命令"></a>磁盘管理命令</h5><p><font size="3">ls</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls：列出目录内容</span><br><span class="line">参数：</span><br><span class="line">	-a查询所有文件和文件夹，包含隐藏的	ls -a</span><br><span class="line">	-l查询详细列表	ls -l	简写为ll</span><br><span class="line">	-h友好展示信息	ll -h</span><br><span class="line">	ls 目录名	展示某个目录下的内容</span><br><span class="line"></span><br><span class="line">例子：查看&#x2F;etc目录下的内容</span><br><span class="line">命令：ll -h &#x2F;etc</span><br></pre></td></tr></table></figure>

<p><font size="3">cd (change directory)：切换目录</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ..&#x2F;	向上一层目录</span><br><span class="line">cd &#x2F;	切换到Linux的根目录</span><br><span class="line">cd &#x2F;目录名	任意目录切换到指定目录中	&#x2F;目录名	Linux的绝对路径</span><br><span class="line">cd ~	切换到当前用户家目录	root用户家目录&#x2F;root</span><br><span class="line">cd -	切换到上一次访问的目录，只能有两个目录互相切换</span><br><span class="line"></span><br><span class="line">Linux绝对：cd &#x2F;etc&#x2F;x1	先切换到&#x2F;目录，然后在&#x2F;目录中找到etc目录，在ext中找子目录x1,</span><br><span class="line">在任意目录都可以随意切换</span><br><span class="line"></span><br><span class="line">Linux相对：cd x1&#x2F;x2	在当前目录中寻找子目录x1,在x1中寻找子目录路x2,</span><br><span class="line">必须确定当前目录下有子目录x1</span><br></pre></td></tr></table></figure>

<p><font size="3">pwd (print working directory)：显示当前的所在目录，返回绝对路径</font></p>
<p><font size="3">mkdir (make directory)：创建目录</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir -p 文件夹名称</span><br><span class="line">	-p父目录不存在情况下先生成父目录（praents)</span><br><span class="line">	</span><br><span class="line">例子1：在&#x2F;root&#x2F;t3目录下创建一个t4目录</span><br><span class="line">位置：&#x2F;root	t3和t4都不存在</span><br><span class="line">命令：mkdir -p t3&#x2F;t4</span><br><span class="line"></span><br><span class="line">例子2：需要在&#x2F;root&#x2F;t1目录下创建t2目录</span><br><span class="line">位置：root</span><br><span class="line">命令：相对：mkdir t1&#x2F;t2</span><br><span class="line">	 绝对：mkdir &#x2F;root&#x2F;t1&#x2F;t2</span><br></pre></td></tr></table></figure>



<h5 id="文件浏览命令"><a href="#文件浏览命令" class="headerlink" title="文件浏览命令"></a>文件浏览命令</h5><p><font size="3">日志文件、XML、properties文件<br>cat 文件名    快捷查看当前文件的内容，适合查看少量信息的文件<br>more 文件名    分页显示文件内容</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">more操作</span><br><span class="line">	Enter	向下n行，需要定义，默认为1行</span><br><span class="line">	空格键		向下滚动一屏或Ctrl+F</span><br><span class="line">	B	返回上一屏或Ctrl+B</span><br><span class="line">	q	退出more</span><br></pre></td></tr></table></figure>

<p><font size="3">less -mN 文件名    分页显示文件内容，标注每行的行号</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">less操作</span><br><span class="line">	Enter	向下n行，需要定义，默认为1行</span><br><span class="line">	空格键	向下滚动一屏或Ctrl+F</span><br><span class="line">	B	返回上一屏或Ctrl+B</span><br><span class="line">	q	退出more</span><br><span class="line">	适用于大量数据的查看</span><br></pre></td></tr></table></figure>

<p><font size="3">tail -数字 文件名    可以快速查看文件后X行的内容<br>例如：tail -10 文件名    查看文件的后10行内容</font></p>
<h5 id="文件操作命令"><a href="#文件操作命令" class="headerlink" title="文件操作命令"></a>文件操作命令</h5><p><font size="3">touch 文件    创建文件</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例子：touch &#x2F;test.txt</span><br></pre></td></tr></table></figure>

<p><font size="3">Alt+P    进入上传界面<br>复制文件：<br>cp 需要复制的文件  复制的位置    </font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例子1：把&#x2F;root&#x2F;demo.java文件复制到&#x2F;root&#x2F;t1目录中	位置：root</span><br><span class="line">命令：cp demo.java t1</span><br><span class="line">	 cp &#x2F;root&#x2F;demo.java &#x2F;root&#x2F;t1</span><br><span class="line"></span><br><span class="line">例子2：把&#x2F;rootdemo.java复制到&#x2F;root&#x2F;t1目录中，改名为ddd.java	位置：root</span><br><span class="line">命令：cp demo.java t1&#x2F;ddd.java</span><br></pre></td></tr></table></figure>

<p><font size="3">复制目录：<br>cp -r 需要复制的目录  复制的位置</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例子：把&#x2F;root&#x2F;t5目录复制到&#x2F;root&#x2F;t1目录中	位置：root</span><br><span class="line">命令：cp -r t5 t1</span><br><span class="line">	 cp -r &#x2F;root&#x2F;t5 &#x2F;root&#x2F;t1</span><br></pre></td></tr></table></figure>

<p><font size="3">文件移动<br>mv (move)    移动或更名现有的文件或目录<br>文件/目录移动:<br>mv 需要移动的文件 移动的位置</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例子：把&#x2F;root&#x2F;t5目录移动到&#x2F;root&#x2F;t3目录中	位置：root</span><br><span class="line">命令：mv t5 t3</span><br></pre></td></tr></table></figure>

<p><font size="3">文件/目录更名操作:</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">例子：把&#x2F;root&#x2F;demo.java改名为he.java	位置：root</span><br><span class="line">命令：mv demo.java he.java</span><br></pre></td></tr></table></figure>

<p><font size="3">文件删除：<br>rm (remove)    删除文件或目录<br>删除文件；</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm 文件名</span><br></pre></td></tr></table></figure>

<p><font size="3">删除目录：</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rm -rf 目录名</span><br><span class="line"></span><br><span class="line">例子：删除&#x2F;root&#x2F;t5目录	位置：root	t5目录下有子目录或文件</span><br><span class="line">命令：rm -rf t5</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">	rm -rf *	删除当前目录下所有内容</span><br><span class="line">	rm -rf &#x2F;*	删除Linux系统根目录下所有文件</span><br></pre></td></tr></table></figure>

<p><font size="3">查找命令：<br>find    查找文件或目录</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find 目录名 -name &#39;需要查找的字符串&#39;</span><br><span class="line">*表示0~多个任意字符</span><br><span class="line"></span><br><span class="line">例子：查找&#x2F;root目录下，所有以ins开头的文件或目录	位置：root</span><br><span class="line">命令：find &#x2F;root -name &#39;ins*&#39;</span><br></pre></td></tr></table></figure>



<h5 id="文件编辑命令"><a href="#文件编辑命令" class="headerlink" title="文件编辑命令"></a>文件编辑命令</h5><p><font size="3">Windows是有记事本<br>Linux有类似记事本的功能    VIM编辑器<br>vim命令</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim 文件名	进入“一般模式”</span><br><span class="line">“i” 切换到“插入模式”</span><br><span class="line">“:” 切换到底行模式</span><br><span class="line">“Esc” 从插入模式退出到“一般模式”</span><br><span class="line">“:wq” 保存并退出操作</span><br><span class="line">“:q!” 强制退出不保存操作</span><br></pre></td></tr></table></figure>



<h5 id="grep和管道"><a href="#grep和管道" class="headerlink" title="grep和管道"></a>grep和管道</h5><p><font size="3">grep 正则表达式    字符串搜索工作<br>gerp -i 需要搜索的字符串    搜索的文件<br>-i 忽略大小写查找数据<br>符合规则，就返回返回规则的行<br>管道命令：可以链接多个Linux命令</font></p>
<p><font size="3">|<br>命令1 | 命令2 | 命令3..<br>例子：查询当前目录中，所有带ins关键字的行数据    位置：/root<br>查询当前木兰路内容 ll<br>命令：ll | grep ins</font></p>
<h5 id="压缩、解压命令-（重要）"><a href="#压缩、解压命令-（重要）" class="headerlink" title="压缩、解压命令 （重要）"></a>压缩、解压命令 （重要）</h5><p><font size="3">压缩包：<br>*.tar    打包，大小不会进行压缩<br>*.tar.gz    打包并压缩文件大小<br>压缩：（参数顺序不变）</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zcvf 压缩包名字.tar.gz 需要压缩的内容</span><br><span class="line">例如：tar  -zcvf demo.tar.gz * 将当前目录下所有进行打包压缩，文件名 demo.tar.gz</span><br></pre></td></tr></table></figure>
<p><font size="3">解压：（参数顺序不变）</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -zxvf 需要解药的压缩包名称	解药到当前目录</span><br><span class="line">tar -zxvf 需要解药的压缩包名称 -C 指定压缩路径	解药到指定目录中</span><br><span class="line"></span><br><span class="line">例子：需要把&#x2F;root&#x2F;t&#x2F;demo.tar.gz压缩包解压到指定目录中，指定目录&#x2F;root&#x2F;t&#x2F;t1  位置&#x2F;root&#x2F;t</span><br><span class="line">命令：tar -zxvf demo.tar.gz -C &#x2F;root&#x2F;t&#x2F;t1</span><br><span class="line">	 tar -zxvf demo.tar.gz -C t1</span><br></pre></td></tr></table></figure>
<h5 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h5><p><font></font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps -ef	查看系统进程</span><br><span class="line"></span><br><span class="line">例子：查看进行中和vim相关的进程</span><br><span class="line">命令：ps -ef|grep -i vim</span><br><span class="line"></span><br><span class="line">Kill -9 pid号	强制杀死某个进程</span><br><span class="line"></span><br><span class="line">例子：查看进程和vim相关的进程有哪些，并将vim进程杀死</span><br><span class="line">命令：ps -ef|grep -i vim</span><br><span class="line">	 Kill -9 pid号</span><br><span class="line"></span><br><span class="line">ifconfig	查看网络配置</span><br><span class="line">ping ip地址	测试和目标的连通性，会持续不断一直测试，直到Ctrl+C</span><br><span class="line"></span><br><span class="line">Linux centos重启命令:reboot	</span><br><span class="line">Linux centos关机命令：halt</span><br></pre></td></tr></table></figure>
<h5 id="其他命令（了解）"><a href="#其他命令（了解）" class="headerlink" title="其他命令（了解）"></a>其他命令（了解）</h5><p><font size="3">setup    网络设置<br>文件权限<br>chmod (change mode) 变更文件或目录的权限<br>Linux权限格式：&lt;类型&gt;&lt;用户&gt;&lt;组&gt;&lt;其他用户&gt;</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">字母法：chmod u&#x2F;g&#x2F;o&#x2F;a +&#x2F;-&#x2F;&#x3D;  rwx  文件</span><br><span class="line">u	user表示该文件的所有者root,所属用户权限</span><br><span class="line">g	group表示与该文件的所有者属于同一组(group)者，即用户组,所属组权限</span><br><span class="line">o	other表示其他以外的人，其他用户权限</span><br><span class="line">a	all表示这三者皆是，所有用户的权限</span><br><span class="line">+	增加权限</span><br><span class="line">-	撤销权限</span><br><span class="line">&#x3D;	设定权限</span><br><span class="line">如：   -rw-r--r--.  1  root  root  31  4月  28 06:28  aa.txt</span><br><span class="line">修改：chmod  u+x  aa.txt</span><br><span class="line">结果	  -rwxr--r--.  1  root  root  31  4月  28 06:28  aa.txt</span><br><span class="line"></span><br><span class="line">例子：更改demo.java所属用户的权限为所有权限</span><br><span class="line">命令：chmod u&#x3D;rwx demo.java</span><br><span class="line"></span><br><span class="line">例子：更改demo.java所属用户组用户的权限为r-x</span><br><span class="line">命令：chmod g&#x3D;rx demo.java</span><br><span class="line"></span><br><span class="line">例子：更改demo.java所有用户的权限为r--</span><br><span class="line">chmod a&#x3D;r demo.java</span><br><span class="line"></span><br><span class="line">数字法：“rwx&quot;权限用数字来代替</span><br><span class="line">第一位代表文件类型，info ls命令查看</span><br><span class="line">rwx：</span><br><span class="line">r 可读权限,数字代号“4”	</span><br><span class="line">w 可写程序，“2”	</span><br><span class="line">x 可执行权限“1”	</span><br><span class="line">- 不具有任何权限  “0”</span><br><span class="line">如：执行chmod  u&#x3D;rwx，g&#x3D;rx,o&#x3D;r  aa.txt  </span><br><span class="line">等同于 ：chmod u&#x3D;7,g&#x3D;5,o&#x3D;4  aa.txt  或  chmod 754 a.txt</span><br><span class="line">chmod  751  file</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>命令</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>软件测试基础</title>
    <url>/2021/04/28/test_base/</url>
    <content><![CDATA[<p><img src="/2021/04/28/test_base/blog5.jpg" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">软件是由程序、数据和文档三部分组成。软件，国标中对软件的定义为：与计算机系统操作有关的计算机程序、规程、规则，以及可能有的文件、文档及数据。</font></p>
<a id="more"></a>




<h3 id="软件生命周期"><a href="#软件生命周期" class="headerlink" title="软件生命周期"></a>软件生命周期</h3><p><font size="3">软件的生命周期由软件定义，软件开发，运行维护（软件维护）3个时期组成，每个时期又进一步划分成若干个阶段</font></p>
<p><font size="3">问题的定义、可行性研究、需求分析；概要设计、详细设计、编码实现、软件测试；软件维护</font></p>
<h5 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h5><p><font size="3">每个阶段执行一次，线性顺序执行</font></p>
<p><font size="3">优点：开发阶段，各阶段比较清晰；严格规定了每个阶段必须提交的文档；强调早期计划及需求调查；适合稳定需求的产品开发；</font></p>
<p><font size="3">缺点：用户只能通过文档来了解产品，但仅通过卸载纸上的静态规格说明，很难全面认识软件产品，导致最终开发的软件不能真正满足用户的需要</font></p>
<p><font size="3">改良：每个阶段都可以融入小的迭代动作</font></p>
<p><font size="3">使用范围：客户要求清楚全面，开发人员对软件应用领域很熟，用户使用环境稳定，用户参与开发要求低</font></p>
<h5 id="快速原型模型"><a href="#快速原型模型" class="headerlink" title="快速原型模型"></a>快速原型模型</h5><p><font size="3">实现一个基本原型，让用户对原型进行评价，逐步调整，使其满足用户最终要求</font></p>
<p><font size="3">优点：适合不能确定需求的软件；可以得到比较良好的定义，容易使用需求 的变化；有利于开发和培训的同步；开发费用降低，开发周期短，对用户更友好</font></p>
<p><font size="3">缺点：不适合开发大型系统；客户与开发者对原型的理解不同；准备的原型设计比较困难；不利于开发人员的创新</font></p>
<p><font size="3">使用范围：读所开发的领域比较熟悉而且有快速的原型开发工具；产品移植或者升级</font></p>
<h5 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h5><p><font size="3">优点：人员分配灵活，刚开始不用投入大量人力资源；如果核心产品很受欢迎，则可增加人力实现下一个增量；</font></p>
<p><font size="3">缺点：并行开发有可能遇到不能集成的风险，软件必须具备卡方式的体系结果；灵活性可以适应变化的能力优于瀑布模型和快速原型模型，但也容易退化为边做边改模型，从而软件过程的控制失去整体性</font></p>
<p><font size="3">对已有产品的升级或者新版本的开发；对完成期限要求高；对所开发的领域比较熟悉而且已有原型系统</font></p>
<h5 id="螺旋模型"><a href="#螺旋模型" class="headerlink" title="螺旋模型"></a>螺旋模型</h5><p><font size="3">引入风险分析方法，适用于需求不清楚的大型项目</font></p>
<p><font size="3">设计的灵活性；可在项目的各个阶段进行变更；分段来构建大型系统，使成本计算变得简单；客户始终参与每个阶段的开发，保证了项目不偏离的正确方向以及项目的可控性；能有效的和客户进行交互。</font></p>
<p><font size="3">缺点：要具备相当丰富的风险评估经验和专门知识，在风险较大的项目开发中，如果未能及时标志风险，势必造成重大损失；过多的迭代次数或增加开发成本，延迟提交时间</font></p>
<p><font size="3">使用范围：适用于需求不清楚的软件项目</font></p>
<h3 id="软件测试模型"><a href="#软件测试模型" class="headerlink" title="软件测试模型"></a>软件测试模型</h3><h5 id="V模型"><a href="#V模型" class="headerlink" title="V模型"></a>V模型</h5><p><img src="/2021/04/28/test_base/v.jpg" alt></p>
<p><font size="3">优点：阶段划分清晰，方便工作的整理把控；包含：底层测试：检验代码质量的测试，如单元测试，高层测试：检验整个系统的需求，如系统测试</font></p>
<p><font size="3">缺点：测试阶段靠后，之前的问题产生修改不方便；v模型是瀑布模型的边志勇，若需求变更，模型灵活性低</font></p>
<h5 id="W模型"><a href="#W模型" class="headerlink" title="W模型"></a>W模型</h5><p><font size="3">双v模型，一个开发v，一个测试v，将开发和测试的工作同时进行，解决v模型的缺点；测试伴随整个软件开发周期，并且测试的对象是需求、设计、程序</font></p>
<p><img src="/2021/04/28/test_base/W.jpg" alt></p>
<p><font size="3">优点：开发测试并行，测的的对象是需求、设计、程序；尽早介入测试，会更糟发现问题，降低修复成本；阶段明显，方便整体流程把控；早介入、早发现、早修复</font></p>
<p><font size="3">缺点：代码依然在测试之前，不方便代码的测试工作；如果没有文旦（中小型企业），根本无法进行w模型；对于测试人员要求高；w模型不适合“敏捷”这种需求频繁便更的开发模式</font></p>
<h5 id="H模型"><a href="#H模型" class="headerlink" title="H模型"></a>H模型</h5><p><font size="3">软件测试过程活动完全独立，贯穿于整个产品的周期，与其他流程并发地进行，某个测试点准备就绪时，可从测试准备阶段进行到测试执行阶段；软件测试可以尽早进行，并且可根据被测物的不同而分层次进行；只要某个测试到达准备就绪点，测试执行活动就可以开展</font></p>
<h3 id="敏捷开发"><a href="#敏捷开发" class="headerlink" title="敏捷开发"></a>敏捷开发</h3><h5 id="一、迭代开发"><a href="#一、迭代开发" class="headerlink" title="一、迭代开发"></a>一、迭代开发</h5><p><font size="3">敏捷开发的核心是迭代开发，敏捷一定是采用迭代开发的方式，iterative，重复开发；将开发的过程拆分成多个小周期，即一次大开发变成多次小开发，每次小开发都是同样的流程，好像重复在做同样的步骤</font></p>
<p><font size="3">迭代开发将一个大任务，分解成多次连续的开发，本质就是逐步开发，开发者最先快速发布一个有效但不完美的最简版本，然后不断迭代，每次迭代包含规划、设计、编码、测试、评估；不断改进产品，添加新功能，通过频繁发布，以及跟踪对前一个迭代的反馈，最终接近较完善的产品形态</font></p>
<h5 id="二、增量开发"><a href="#二、增量开发" class="headerlink" title="二、增量开发"></a>二、增量开发</h5><p><font size="3">迭代开发只是要求将<br>开发分成多个迭代，但不知怎么划分迭代，一般采用增量开发划分迭代，划分具体的任务放在哪个版本的迭代中</font></p>
<p><font size="3">增量开发：指的是软件的每个版本，都会新增一个用户可以感知的完整功能，按照新增功能来划分迭代，增量开发加上敏捷开发才算是真正的敏捷开发</font></p>
<p><font size="3">敏捷开发好处：1、早期交付，降低成本；2、降低风险，及时了解市场需求，降低产品不适用的风险；</font></p>
<h5 id="敏捷开发的好处"><a href="#敏捷开发的好处" class="headerlink" title="敏捷开发的好处"></a>敏捷开发的好处</h5><p><font size="3">早期交付，大大降低成本；降低风险，及时了解市场需求，降低产品不适用的风险</font></p>
<h5 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h5><p><font size="3">迭代：每次迭代都都是一个完整的软件开发周期，必须按照软件工程的方法论，进行正规的流程管理</font><br><font size="3">1、需求分析（requirements analysis)<br>2、设计（design)<br>3、编码（coding）<br>4、测试（testing）<br>5、部署和评估（deployment/evaluation）</font></p>
<h5 id="敏捷开发价值观"><a href="#敏捷开发价值观" class="headerlink" title="敏捷开发价值观"></a>敏捷开发价值观</h5><p><font size="3">程序员的主观能动性，以及程序员之间的互动，优于既定流程和工具<br>软件能够运行，优于详尽的文档<br>跟客户的密切协作，优于合同和谈判<br>能够响应变化，优于遵循计划</font></p>
<h5 id="开发模式"><a href="#开发模式" class="headerlink" title="开发模式"></a>开发模式</h5><p><font size="3">角色：<br>产品负责人（PO）产品经理：主要负责整理需求，需求呈现形式为用户故事<br>项目经理（Scrum Master (SM)）：负责带领团队完成相关业务<br>开发团队（Dev Team ）：开发（前端、后端）、UI/UE、测试</font><br><font size="3">输出物<br>产品代办列表（用户故事）<br>迭代待办列表<br>产品增量（可工作的软件）</font></p>
<p><font size="3">5个活动<br>迭代（冲刺）sprint<br>迭代计划：确定迭代待办列表内容<br>每日站会<br>评审会<br>回顾会</font></p>
<p><font size="3">敏捷测流程（一次迭代）</font></p>
<h3 id="软件测试分类"><a href="#软件测试分类" class="headerlink" title="软件测试分类"></a>软件测试分类</h3><p><img src="/2021/04/28/test_base/c.jpg" alt></p>
<h5 id="按测试阶段分类"><a href="#按测试阶段分类" class="headerlink" title="按测试阶段分类"></a>按测试阶段分类</h5><p><font size="3">单元测试：又称模块测试，从程序内部结构出发<br>集成测试：（组装测试），将所有程序模块进行有序的、递增测试，重点测试不同的接口部分<br>系统测试：主要测试系统功能、性能、是否满足需求，在不同软硬环境不同的兼容性</font></p>
<h5 id="按照是否覆盖源代码分类"><a href="#按照是否覆盖源代码分类" class="headerlink" title="按照是否覆盖源代码分类"></a>按照是否覆盖源代码分类</h5><p><font size="3">黑盒测试：不考虑内部结构和内部特性，注重测试功能需求，输入数据和输出数据<br>功能测试：检查软件功能是否符合用户需求；逻辑、界面、易用性、安装、兼容性；等价类划分、边界值分析、因果图、判定表、场景法、流程图、正交法、错误推断法<br>性能测试：峰值、高端领域；时间性能（事务相应时间）、空间性能（系统消耗资源）、稳定性测试、负载测试、压力测试<br>白盒测试：查看源代码和程序结构；逻辑覆盖、循环覆盖、基本路径覆盖</font></p>
<h5 id="按是否运行分类"><a href="#按是否运行分类" class="headerlink" title="按是否运行分类"></a>按是否运行分类</h5><p><font size="3">静态测试：不运行软件，静态检查程序代码、界面或文档中可能存在错误<br>动态测试：运行被测试软件，输入相应的测试软件，检查输入结果是否符合预期结果</font></p>
<h5 id="其他分类"><a href="#其他分类" class="headerlink" title="其他分类"></a>其他分类</h5><p><font size="3">回归测试：修改了旧代码后，重新进行测试确认修改没有引入新的错误或导致其他代码产生错误，滚动版本之后进行回归验证前面的功能模块<br>冒烟测试：用于确认代码中的更改会按预期运行，且不会破坏整个版本的稳定性<br>随机测试：测试重点模块或之前出过问题的模块</font></p>
<p><font size="3"></font></p>
<h5 id="验收测试"><a href="#验收测试" class="headerlink" title="验收测试"></a>验收测试</h5><p><font size="3">内测版本（alpha）：在用户组织模拟软件系统的运行环境下的一种验收测试，由用火或第三方测试公司进行测试；（内部人员主导测试，或少一部分用户；要解决严重问题）；模拟各类用户行为，对即将面向市场的软件产品进行测试<br>公测版本（beta）：用户公司组织各方面的典型终端用户在日常工作中实际使用beta版本，并要求用户报告异常情况，提出批评意见；客户主导测试，所有用户可以免费试用，用户反馈修复软件的细节</font></p>
<p><font size="3">准正式版本（gamma）：正式版的候选版本</font></p>
<p><font size="3">内测alpha和公测beta测试区别：<br>测试场所不同：alpha测试是指把用户请到开发方的场所来测试（内部人员主导，用户数量较少，时间较集中）；beta测试是指一个或多个用户的场所进行的测试（用户数量较多，时间不集中，周期比较长）；alpha测试先于beta测试执行。</font></p>
]]></content>
      <categories>
        <category>测试使用</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>理论</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/06/21/posts/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer">

<p><img src="/2020/06/21/posts/hello_hexo.jpg" alt></p>
<!-- <img src="/2020/06/21/posts/hello_hexo.jpg" class="" title="examplename"> -->

<p><font size="3">&nbsp;&nbsp;&nbsp;&nbsp;Welcome to <a href="https://jamieslau.github.io/">Jamie’s Blog</a>! This is my very first blog post. It’s a great honor to have my blog captured by you. Blog related resources exist in <a href="https://github.com/JamiesLau/JamiesLau.github.io" target="_blank" rel="noopener">https://github.com/JamiesLau/JamiesLau.github.io</a>. If you want more information，please visit my blog or you can ask me on <a href="https://github.com/JamiesLau/JamiesLau.github.io/issues" target="_blank" rel="noopener">GitHub</a>.</font></p>
<hr>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">互联网从诞生发展至今日，每天都有无数的人在上面留下自己的足迹，用它记录生活、抒发情感、分享见解、开阔眼界。<a id="more"></a>在这里运用GitHub + Hexo建立第一个博客，通过GitHub Pages这个平台，这里使用你的个性域名，挑选最适合你的主题，设计自己的个性化页面；你可以在线创建和发布网站，也可以本地通过工具、命令管理网站。在这里展示和输出自身价值，打造属于自己的互联网 [身份证]。</font></p>
<h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p><font size="3">GitHub是全球最大的社交编程及代码托管网站。这里聚集了世界上各路技术大牛和最优的代码库。通过邮箱注册免费的github账户，可以用git对服务器仓库进行源代码的管理。</font></p>
<h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><p><font size="3">GitHub Pages是用来托管GitHub上静态网页的免费站点，很多大牛用它来搭建个人博客.它具有足有的免费空间来管理自己的资料，灵活设计属于自己的域名、DIY网站主题和使用他人开发好的插件，环境搭建、系统维护、文件存储都有GitHub处理，你只需要专注于文章创作。</font></p>
<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p><font size="3">Hexo是一个基于node.js的静态博客网站生成器，能够极速生成静态页面，支持Markdown，一键部署到GitHub Pages，具有丰富的插件支持，所以熟悉hexo和Markdown语法对于大家个人博客是非常有必要的。hexo会解析Markdown语法生成对应的html，主题就是css样式。</font></p>
<p><font size="3">经过一番苦心搭建再创作，哈哈哈，这就算是终于开篇了吧，一个在互联网Lazing的工具人@Jamie’s，see you。</font></p>
]]></content>
  </entry>
  <entry>
    <title>设计测试用例</title>
    <url>/2021/05/17/testcase/</url>
    <content><![CDATA[<img src="/2021/05/17/testcase/blog11.png" style="zoom:180%">

<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">带着问题学习是最高效的学习方法。</font></p>
<a id="more"></a>

<h3 id="如何设计测试用例"><a href="#如何设计测试用例" class="headerlink" title="如何设计测试用例"></a>如何设计测试用例</h3><h4 id="测试用例的定义"><a href="#测试用例的定义" class="headerlink" title="测试用例的定义"></a>测试用例的定义</h4><p><font size="3">测试用例(Test Case)，是为某个特殊目标而编制的一组测试输入、执行条件以及预期结果，以便测试某个程序路径或核实是否满足某个特定需求。</font></p>
<h4 id="编写测试用例目的"><a href="#编写测试用例目的" class="headerlink" title="编写测试用例目的"></a>编写测试用例目的</h4><ol>
<li><font size="3">理清测试思路：一个大而且复杂的项目，需要把项目功能细分，根据每个功能编写测试用例的方式整理测试系统的思路，避免遗漏要测试的功能点。</font></li>
<li><font size="3">明确测试任务：编写完用例后，可以明确自己需要执行的用例总数，以便预估测试工作量。并且可以很清楚的知道实际测试的进度，方便统计和跟踪剩余工作量和回归工作量。</font></li>
<li><font size="3">规范测试行为：每个人对于功能和开发原理的理解都是不同的，同一个案例，每个人的理解程度和扩展都是不一样的。需要详细明确的用例来规范，以减少遗漏。</font></li>
</ol>
<h4 id="如何编写用例"><a href="#如何编写用例" class="headerlink" title="如何编写用例"></a>如何编写用例</h4><h5 id="测试用例的来源"><a href="#测试用例的来源" class="headerlink" title="测试用例的来源"></a>测试用例的来源</h5><ol>
<li><font size="3">分析需求文档：了解需求的背景；分析需求的合理性；明确需求的范围；挖掘隐含需求；将部分需求罗列出来，可作为需求粗略的测试点。</font></li>
<li><font size="3">了解开发原理：确定开发的实现框架；明确输入和输出代码规则；减少测试方向偏差</font></li>
</ol>
<h5 id="测试用例的要素"><a href="#测试用例的要素" class="headerlink" title="测试用例的要素"></a>测试用例的要素</h5><ol>
<li><font size="3">测试环境：测试的系统是什么？硬件软件的要求是什么？</font></li>
<li><font size="3">测试数据：测试执行的输入值</font></li>
<li><font size="3">测试步骤：提供测试执行过程的步骤</font></li>
<li><font size="3">预期结果：预期结果根据软件需求中的输出得出。</font></li>
<li><font size="3">用例标题：对测试用例主旨的描述，言简意赅，清除表单测试用例的目的</font></li>
<li><font size="3">用例编号：定义测试用例编号，用来标识每个用例的唯一性，进行用例的跟踪和维护</font></li>
<li><font size="3">用例级别：P1、P2、P3、P4</font><img src="/2021/05/17/testcase/ces1.png" style="zoom:80%">


</li>
</ol>
<h5 id="测试用例设计方法"><a href="#测试用例设计方法" class="headerlink" title="测试用例设计方法"></a>测试用例设计方法</h5><h6 id="等价类划分"><a href="#等价类划分" class="headerlink" title="等价类划分"></a>等价类划分</h6><p><font size="3">将输入的值分为有效等价类和无效等价类</font><br><font size="3">有效等价类：指符合需求规格说明书，输入合理的数据集合</font><br><font size="3">无效等价类：指不符合需求规格说明书，输入不合理的数据集合</font><br><font size="3">具有共同输入特性的输入子集<br>将不能穷举的测试过程进行合理分类，保证设计的测试用例具有完整性、代表性</font><br><font size="3">步骤：<br>1、需求分析，确定有效和无效等价类<br>2、有效等价类划分（条件、注意边界值(极值)，中间再找个值）<br>3、无效等价类划分（跟有效等价类相反，其他特殊情况（中文、英文、特殊符号、空格、空））</font><br><font size="3">测试文本框总结<br>文本框要输入的长度<br>输入的类型<br>组成规则<br>是否为空<br>是否重复–区分大小写<br>是否去除空格（程序中文字最前和最后部分空格，程序员一般会清除，文本中间空格保留）</font></p>
<h6 id="边界值分析"><a href="#边界值分析" class="headerlink" title="边界值分析"></a>边界值分析</h6><p><font size="3">任何测试场景下都可以使用边界值分析，选取正好等于、刚刚大于或刚刚小于边界值作为测试数据<br>上点、内点、离点<br>明确需求<br>确定有效和无效等价类<br>确定边界值<br></font></p>
<h6 id="错误推断法"><a href="#错误推断法" class="headerlink" title="错误推断法"></a>错误推断法</h6><p><font size="3">利用直觉、经验，列举出可能犯的错误或错误易发生清单，编写测试用例<br>已经进过几轮测试后也可以使用推断法进行测试用例补充<br>时间紧急、测试时间少、考虑使用</font></p>
<h6 id="因果图法"><a href="#因果图法" class="headerlink" title="因果图法"></a>因果图法</h6><p><font size="3">罗列出所有的输入和输出，将输入和输出整理出因果图和依赖关系，根据每个依赖做设计。因果图方法考虑输入的组合，特别适合多个输入条件相关有关联又相互约束的情况</font><br><font size="3">特点：<br>输入、输出条件的相互制约关系以及组合关系 ，输出结果对输入条件的依赖关系</font></p>
<h6 id="判定表"><a href="#判定表" class="headerlink" title="判定表"></a>判定表</h6><p><font size="3">判定表适合解决多个逻辑条件的组合，将各种逻辑的组合罗列出来，避免遗漏，列出每个对应条件所有可能情况下的取值，不需要考虑条件和顺序，再列出结果动作项，对每个条件进行结果判定。</font><br><img src="/2021/05/17/testcase/ces2.png" style="zoom:70%"><br><font size="3">判定表</font><br><img src="/2021/05/17/testcase/ces3.png" style="zoom:90%"></p>
<h6 id="正交法"><a href="#正交法" class="headerlink" title="正交法"></a>正交法</h6><p><font size="3">正交法的核心思想是从大量测试数据中选取有代表性的点来测试，从而减少测试用例数量。</font><br><font size="3">正交排列能够使用最小的测试过程集合获得最大的测试覆盖率<br>当要测试的内容需要排列组合的情况非常多的时候，用正交表科学减少测试用例的个数<br>特点：均匀分散、齐整可比（所有情况应该均匀被测试一次）<br>如何查询正交表<br>因素：控件的个数<br>水平：控件里面的可选项个数</font></p>
<h6 id="场景法"><a href="#场景法" class="headerlink" title="场景法"></a>场景法</h6><p><font size="3">用流程图描述用户的使用场景，覆盖流程路径设计测试用例<br>模拟用户操作软件时的场景，用于测试系统的业务流程</font><br><font size="3">基本流：正确的业务流程（模拟正确操作流程）<br>备选流：有问题的业务流程（模拟错误操作流程）<br>简单说就是把软件中正确路径和错误路径走一遍<br>在冒烟测试时，主要采用场景法进行测试</font></p>
<h6 id="用例设计方法推荐"><a href="#用例设计方法推荐" class="headerlink" title="用例设计方法推荐"></a>用例设计方法推荐</h6><p><font size="3">具有输入功能，但输入之间没有组合关系—推荐是 等价类划分法</font><br><font size="3">输入有边界如长度、类型—用边界值法补充测试用例</font><br><font size="3">多输入、多输出、输入与输出之间存在组合关系、输入与输出之间存在依赖关系和制约–推荐<br>使用因果图法和判定表</font><br><font size="3">用最少的测试用例获得最大测试覆盖率时—推荐使用正交法</font><br><font size="3">多个功能的组合测试—流程图与场景法</font><br><font size="3">使用错误推测法来进一步补充测试用例</font></p>
<h4 id="如何提升用例编写能力"><a href="#如何提升用例编写能力" class="headerlink" title="如何提升用例编写能力"></a>如何提升用例编写能力</h4><ol>
<li><font size="3">从大往小抓起测试框架先行</font><br><font size="3">使用思维导图，快速梳理清晰要测试的模块、测试点、以及结构关系，让自己对要测试的内容有整体的框架和印象，脑图能够快速的让开发、接手的测试同学快速理解和看出大方向的偏差和遗漏。</font><br><font size="3">其他图像工具，流程图、鱼骨图、N-S图</font></li>
<li><font size="3">多维度的思考和覆盖</font><br><font size="3">从界面、功能、性能、兼容、异常等角度思考，尽可能的覆盖更全更广。</font></li>
<li><font size="3">熟悉被测的业务和系统</font><br><font size="3">任何系统都有大的业务背景，要了解系统的业务逻辑，才能更准确的把握好测试重点写好测试用例。</font></li>
<li><font size="3">站在用户角度分析</font><br><font size="3">站在客户的角度分析：客户需求，客户使用场景，有利于更好挖掘和思考隐含的需求，或拉上几个同事体验下产品，看看他们的操作行为和顺序是怎样的。</font></li>
<li><font size="3">重视用例评审</font><br><font size="3">重视测试评审和评审意见，把经常见到的用例设计的误区和一些好多用例设计，还可以多看看透明人的测试思路和用例，查漏补缺。</font></li>
</ol>
]]></content>
      <categories>
        <category>测试使用</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>理论</tag>
        <tag>测试用例</tag>
      </tags>
  </entry>
  <entry>
    <title>重拾记忆</title>
    <url>/2021/04/24/recall_memory/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="574d1f4ba710cb8b7918951aeff27b1557bbc7e449ae62b286826dc96d235c68">4ddf7ce7117f9beedd60fc994fde7db181382a247324e5c8b92f47dea701964ac29f19138b8e938d7b3aae5b7a6859618cac6ff1ae0a660480e46edeef262c3585d5519b03d94c0a7b3003a09bdad31d583cf65441b908b8a55da16534bc874eb05f89971cc99a8c1a6c6e920378f540c13eb1b85e1c2cc90657991977bcd56b03be7ca79f3716f88e871db77b70db3a16ef614c305e13d8f5f37975abf8cd2aa57839c14098d2e84a89f418397fb2f3824e384ec5cc4c0345511f9c49079494d8d628d48442d4876001eecf9405b9c267264113a059b9a75fcd65ea2b5261464466d5d5597b920ff71f5177254c65fffbba5a19d3b006987727acf46abbd2d1fefdbf1feba71bf61b76072abb689e3b33ebb063710c00067d7115ae1e2ec54809437b381150de96fa56a47e218f80bc22be1186055d90b8b11fd1d50ca2b4c3bab38f506f718411f359c50efb5090eb357508951859d02bacfb8f117873046d477d549eed83c0c0362b6f52175554188b6367c0d410ae96f62cc8ce5012ee67fc92ba1fd1bc1bbfb48f0da6caab37e4f840411d6c6f8dfec7285ff51e71dff974d1028ff4b49e45954fbf16d2532b4f10a9c8037f8afdc0eed8d50e44a7375f468bcebb640b2a1f6e67811d8383b94ec729cbe2a1df8bdcc56be560be8d87e6cc8305b4bab82edf318454d20fc4f1f0e585b9bf5a690fe1a1c8cb19d671a174936048bd514d47f2b1325b3d2bb0755b8e9afc839d4450679d3acfe5411a6dcca6dc6dc4701621bda2e2e5b80b992364a09652802ff17c4315b2024d28734ecf456e85559014a6db7c2711ff53367d42e49dfbc5bea206f6e709fb0f63bb88a5ac82316fcf31b1ff8cb680cf5f554f56cfb1768e79dcf9f56c8b358e8e7809a19b3d0cbb8bf909f806c980d8d7dc64eb5680de33c0a49e6b23d4512a59d31c032a255a562e503522f44bfa2b8e157418ad8b6a413ab329d30eed74ef2b8a684f2a4dd1a955561401808578e1760eb2db6e7f99b31fb0a3dcdc9c0195d7ad37765b71794b643d6e2f28f71f7e9915dcbca29335c7be13cbee41defb57e5966de76702a7cd36803a929945c28e859f56c19f603c8998de986567ad3bbe4515acf9670c7dea851f62ad2483c6be4f69e145b77ddb372fca8af294fcf0307085ae3cb190ec21ee2d31f456501b81072e7b7cbe6a096a4edfab4e11118ae0bb0d5dd71f09fe3c93e5d06a63be259fd75e110d60e8acd86ad5b530a9715ee52bd4eccc2ba919698ca8db18d4df51a26ebd8717babf0413b2d0192cf96f9d66d3dae4f71632d8df11d19813ee526312c2ca3c6ec2a06b0b15f25997ee43771c77e7d10cbc2a00f22a2430fab9ccc73f640d65f1c6f47beaa579301dcd9d9c88e6b8b8cb90b9bd96f39d9d43d6d065a9f875f899f5e5a708e8fa15a61f1efbdc1dbc85b1bf40d9eb7817f4f30216266825f5f73637e43b8f54815c71b980bccf3a237d245862e22afc58bae38aca9be9da84fd3b360ad530b2bd31cb950d21d369c79666ac30774e4b48f3f4d87c6f742c144816b49ed9748faed78c6f31ac1201c9aed295592abaead69af8bf0878ef5e78365a2ca5549a5ee694500509ae4d852f3b05a11c6e1f7ffd4a0aa095270577f33daa20582193170a32f87d335b897e7bb17a7cf704a417c6201e82224ecd356b8f1f89b2f3f2fafe43e3ed316d6c961dfb977853d7a87c084a817930daf27bc7db07c0914a2c16510ebe661585d524c410fb71295a1007299310691d457919e3678c2001733674d8b586081772641aaa5ff32cf42627bd6feb59e2b6ff966b3533be175280d66656b74ad47fef5d53e03551bbc9baa56ba69f41cc323d76286902a1b260ca31adae44b70ec0ffebb852cbf941b4b9ac8868de5b63e853b43ba32fb6478631d713fe74c877893b973632a621cae8622508d4c9ef94ba80da24cee089dc0042e704304c7274a2db75fd6c3e1e5cc00c44524c77d035bd120066a2cb7cbf48df194216ccb2aa15ec10fd6650549ad7484313eaa7cf88f0f0cb0fd35f908cbc04861efa10bb1936488d6404bd5e86a464da9d3185f3084cec64cc26345bf0e09bdd8330366bfe77b220007fcabbaa1ffce043ed922dd60263fbbfedf31c8fc9645478e8510888bebf7f866af7da7bbc12d825eee38ee16993b763ec406dc82584dad415f009177fdf1c27195746277a44f6a2a6bb22873b11e1068eb1a5bbcb2dc940258bb7e330aaa39d1613f20a75966a57d73482042a37febda4b97faa6c8b0c824b71e6ea06e892121c64e38b1fb052d98efd8036e858fdad36a8b6038a6ea367061b6732928d7f2c1e884d53120d6711742d59d8cf833aa804652d746855a3911c536dafe1d459c31a872845783d02f5a40f95987cf324484df6363ef54eacbbb42e73171834a21c2421d042cad2c1f8d54c6d1034f89e443135da356925fcf042376e8a89b22e107e63083bab35c378967493a9aeaf3ad0545da628be8912b640a2e185aded8888648b86e33784bbeb352849f69c2d6e9dcec4fffb7f0324619e69ee764802dd596e994ed4b6878e7785c789eafb5399997eac26c4c72f3517e7ff5c22babb56370340c17648ccc05015cf14b16b463533dace062132a4fcb50ba5babc6e605d2827580768d3bcb435dc9d496e7a29e1fd09d8b3f8265d7095217a3b14cf44cb8e5681515befe07637065028d53c4b2157f51b6d9beb37cbef8ffa3e96a8a9d555ca82b68e52d6f9e492cc1de78caf7fdd989dc995869d3a8af16f011de08588b018e6f9d5a84ca387ffb7fd6187def6a5ae80c0110c60aa8685045bca5e7eac52c04ef923048bebb1e4280c68445ac3f135f684dc729079e30d14997d495f024613fd1e315cba2ba56fe92ec656d2973c05549c511f557bda1b210d291fed51cf10316a7deecc31f73078febc74d8a02cb5e80df710986eaa926277f0da6b81fb680947ea12ea7a89ed0eeccc0ad8fb78c47e658988ff3e3c7cf0299ba9b02ca8c43491644eaca883a5a9b03a6959b9a388ec8caee736a4061f615031bed211e78f8e1f940c21812e2b373b8d1c4bfb77daeef7dbee14570e4116dafb544825c8355ac63b5d3588d9ece6eb16a92437be5f475661794fdef48cb8dc476bf1c073b98a30b8035e7e702c9c8d0ded16c0f4d889998ae3500ae976042d3aa1bfeb972d506548795f3f6c994a9dcb4c009c811ed8ab483cc2e72fd438533a575e22120076aa22c13ac0a9fa27b02ea6250abc0d4a0d3e6cf0040d5a7e11b0c1b3c1909af4658af05894b2540e470bd0d34d4185c7b9dea3b671e0d8b0f516954a135790f1604abb704f8ab22287ff53089e0f987a4ff81fb42fc68eea723bc872110d4d1a21fcb5c82b424abe1bd6b6a01db75e018bfe95fb0703bb6622c70a7f476628ca942f2aacf95368504cc5445b020086707f763e83ef93998461bf811299c1ac952c14680cb1289d1611afe128b01380d55915f09f53dcc3f7391ec43b583cd13e4334343e538e9db043c57ce52a6e650418ade3d8c0a9589ad41798c5df94555be25d2e60c9608836908618b5845c2c0386dd1d98843e23cb68ce27736ba63916b65c730f1036281c3a22d208d946534357532f3164f5a5b116cbc38545e84498e10cffc45e4082b7fe0af67b2ec05a69da159c4714c5c2fe98635de7e613a4034dee6920ef4bb4d31f3d8d6f73dde613af068043110f11d3f01cf049c80ab791473003fb46fec2b3b19f87041beb734912933e46f216e4a5ec32ffe9ef242613c48ce46eccdc937ddf35bf036b0d9dab6ff28062b799262127e3077dcb544858f790bea868c3009a7560631d42f9ac42570db14b278963a1f3033f06697d25549549e371e69cf881e5956ccf17d6b981187efb53b83c174b9f7271c1678e8999333c0ca0ca13401932a94605be11323a0a6a8d595320eb9c5f25815e4f0c5ce9b5c653fc0de5bb4bad8c740f5bca725ddb6487917985e993f49c32bbe2bc87c3714c08b835f5d52f9f42957a5f1d532dbb15f68c25c7ce01ff26ee31477f5de2d51f08efc1ebbd83470ada64bbc53cda420ca58670f615e303c435913c8eace0701e385394f21706620717efce45fa82241559d70258955c37fb07af55c5c3ea3be7b299f7383d4eecd30f50237882801d7817579b892ea42bfe71cdde1719bd12213461a23c60e4129a3a339efec815123b2f16640e70086e2216750ec6641bf635f690df2e4cf5c7604449d510696e2b631065d922887366eb4cf881915443189bba821a43d60ae65600a85ec4b8ae75b50fe524bf65940ef6b2f009f2c4af2a1ee354c146a267d5bb30091390d71d615bc616958d8588c83b0f4760dcdd1385939da4c6962a0deaa057c7447246702982b062ef40b70b5fc44bda51b803f6426196805f7c6d2e74a5d46e4b3fe509f0d4635ab99b6f9c78f611757b3e7800b9a2f5783d71e41c49c9033bbf2fac4483fa75d8265e15bfb8b00f535f8fdb95f7d3d637eadf95b596d5f2addcb6d20ec8438a45c90369d26bd6d1e26df88735a8185c31e73e4ae803fd71447b106c43ef714d50ee0d4034866fa952fdb4aaa81f4cf549539469c801a092d9fddfe212a118389bbdab37efe8104f498a8d54ae42311a16e4d72c90a370ff0debb68b1ec0a205d0b3d67b65defa059e854f63241dbb2761014c959c479f8d4aeec0bfa8a2b72b914f851fffb991d09ae44d02792f551a4c41cad154194f3e3b7e715148ceee6a7c8528d947bcb81778b2f7b9b0959f6047c8845b43a5ae2dc69f277239a7286c23830f7553b3fd50942f8ba8a9b6139d4a02ee0b29271f89938445dc3580b7e40e8c0f69209407267856bfa094bc1d78bbc0079bba323e50d04feee27642c96ed540784a36fa36fc5261fdb53c782def3b9288a40cd66932854fad4bdcc0c63ab8a4685b84ca6d593003041af82eaf1d1b91bcb04db8f0b394166ca3346ba816f5bdb967f344ba6bb80a31def389b6b3f0f51a53fbbce7f114f4e82d06366087a65f886014f9690021e1b21a954d08758b50cea8d218eb4c88907e59d664eb0f9117c031f752952cd37bdbe688ce23a81b4904a867b4e69a28ccaf7bbf920ef7f2bd798cb43fe5c85a254936337c40ff7c22b78a425ef6dbfbedd2106c94</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Welcome to my blog, click enter password to read.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>记录</tag>
        <tag>反思</tag>
      </tags>
  </entry>
  <entry>
    <title>阶梯压测线程</title>
    <url>/2021/06/26/stress/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="20d7b2a89a7378e49fc8edd3c5846cd69885eb73522b73f249c7e44b1461db55">4ddf7ce7117f9beedd60fc994fde7db1d93df9224cf6fa937b520472d72ffd5d0a682212ff01f0e910b2f531cffa9cb6229fded760b23200b698feb69ad5a85651f80c308d8a94aa67d9f6da2707dbb6501e82c6cf7d5718ddced8ddbaf5fce37e4facc3024c272cd4bb6d2cdfe5566fad7aec07d7cd72e126f163afacc3f5d46ad634b648d9599e0be6f1a824e73dc41585b31f99e1c53f2baadb4bb0575cf00d61fab78fa8eca69c94cdb324bea867a599277ea9b12774368c29add9b4e72d7591d72fe2f1a0809b151bfd7f0ab0920e624f88ab43bb5753de82cb277d512883e1637a66c6de37c60b550ff0491aa7fe981e723dcf3f6a02125280b683121b3585640e0a264142a5c7ad6176a6ba07d8d89c7291cc569b49f2c2b73839fe28d678312975ead2ea0523edcc40326ee72b0164dcb480ae4f58c81deea8c9401b76d7c24298eb380f496ef5a155ca9aac9f482bcb4e051d8a5ca205821af3b8186657003c5467f50d9b9ebe954c1afb17</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Welcome to my blog, click enter password to read.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>性能测试</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>测试</tag>
        <tag>JMeter</tag>
      </tags>
  </entry>
</search>
