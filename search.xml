<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/06/21/posts/</url>
    <content><![CDATA[<meta name="referrer" content="no-referrer">

<p><img src="/2020/06/21/posts/hello_hexo.jpg" alt></p>
<!-- <img src="/2020/06/21/posts/hello_hexo.jpg" class="" title="examplename"> -->

<p><font size="3">&nbsp;&nbsp;&nbsp;&nbsp;Welcome to <a href="https://jamieslau.github.io/">Jamie’s Blog</a>! This is my very first blog post. It’s a great honor to have my blog captured by you. Blog related resources exist in <a href="https://github.com/JamiesLau/JamiesLau.github.io" target="_blank" rel="noopener">https://github.com/JamiesLau/JamiesLau.github.io</a>. If you want more information，please visit my blog or you can ask me on <a href="https://github.com/JamiesLau/JamiesLau.github.io/issues" target="_blank" rel="noopener">GitHub</a>.</font></p>
<hr>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">互联网从诞生发展至今日，每天都有无数的人在上面留下自己的足迹，用它记录生活、抒发情感、分享见解、开阔眼界。<a id="more"></a>在这里运用GitHub + Hexo建立第一个博客，通过GitHub Pages这个平台，这里使用你的个性域名，挑选最适合你的主题，设计自己的个性化页面；你可以在线创建和发布网站，也可以本地通过工具、命令管理网站。在这里展示和输出自身价值，打造属于自己的互联网 [身份证]。</font></p>
<h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p><font size="3">GitHub是全球最大的社交编程及代码托管网站。这里聚集了世界上各路技术大牛和最优的代码库。通过邮箱注册免费的github账户，可以用git对服务器仓库进行源代码的管理。</font></p>
<h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><p><font size="3">GitHub Pages是用来托管GitHub上静态网页的免费站点，很多大牛用它来搭建个人博客.它具有足有的免费空间来管理自己的资料，灵活设计属于自己的域名、DIY网站主题和使用他人开发好的插件，环境搭建、系统维护、文件存储都有GitHub处理，你只需要专注于文章创作。</font></p>
<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p><font size="3">Hexo是一个基于node.js的静态博客网站生成器，能够极速生成静态页面，支持Markdown，一键部署到GitHub Pages，具有丰富的插件支持，所以熟悉hexo和Markdown语法对于大家个人博客是非常有必要的。hexo会解析Markdown语法生成对应的html，主题就是css样式。</font></p>
<p><font size="3">经过一番苦心搭建再创作，哈哈哈，这就算是终于开篇了吧，一个在互联网Lazing的工具人@Jamie’s，see you。</font></p>
]]></content>
  </entry>
  <entry>
    <title>重拾记忆</title>
    <url>/2021/04/24/recall_memory/</url>
    <content><![CDATA[<p><img src="/2021/04/24/recall_memory/blog1.jpeg" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">好久不见，甚是想念。</font><br><font size="3">重拾记忆，保持那份热爱，不忘初心。</font></p>
<a id="more"></a>
<p><font size="3">还是在学习GitHub时，偶然发现hexo主题，一时兴起借助这两个平台搭建自己的个人博客网站，百度学习了配置主题设置，简单个性化设计；本来想着能不断学习，坚持发布，但由于github突然访问需要验证，并考虑到工作学习的时间原因，后来就断更了。想想真的是一时兴起，未能坚持住；还有只能说自己还要学习的东西太多了，个人博客搭建未能安排上日程。最近下班和同事聊天谈到搭建自己的博客网站，想到自己去年也搭建了一个，再不修一下怕是要塌了吧。这次重拾当年的记忆，保持那份热爱，坚持更新；不是为了写给别人看，更重要是写给自己、总结经验、记录生活、成就自己。</font></p>
<h3 id="回忆"><a href="#回忆" class="headerlink" title="回忆"></a>回忆</h3><p><font size="3">重拾记忆并没有那么简单，一点点回忆主题的配置文件，启动本地预览、生成、发布的命令，老实说是有点简单，但是太久没运行命令，那些指令都在脑中的内存中差不多都清除掉了。好记性不如烂笔头，还好有当时记录的笔记，一顿摸索算是用git、hexo命令启动运行本地预览成功了。尝试修改更新头像、修改样式更新上传线上，这些到算兴奋起来。为了再次熟悉配置，又按照之前写过的配置文件检查了一遍。总之，目前还远远不够，仅仅还是开始，还有好多功能需要去探索，去学习搭建优化。</font></p>
<h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p><font size="3">对于next主题配置，绝大部分是不知道，只能按照自己的需求去百度，找到NexT使用文档或其他博文，加上自身的自学能力，一点点修改完善。改一点点本地就预览一次，生怕出错，但其中还是踩了几个坑，就连本地预览都出错，一度挫败感涌上心头，只能修改回之前的配置或是删除安装文件，庆幸的是一点点改回去没问题，不然真的是要崩溃。这些问题也只因自己的无知买单，借鉴需谨慎，否则随便入坑。在失败中探索，积累经验。最简的办法，无非是在B站找到对应配置功能的博主视频，按照人家的步骤操作。在解决问题时，也意外发现两个非常棒的next主题博客，从中也悟出了一些启发，学到了好的设计思想，打算重构一下我的博客网站，毕竟把我的和人家对比起来，真的是差太远了。</font></p>
<h3 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h3><p><font size="3">首先从另存内容，删除之前写的文章开始，看了别的分类和标签，才知道自己傻乎乎的不会定义文章分类和标签，导致不会自动生成对应的链接，再新建博客文章，重新定义，终于知道为什么之前写的没有日志，还好找到了视频学习一下。next主题框架功能齐全，只是自己不会利用，还费劲的自己设计，想想自己真是无知，而不是闭门造车。日后完善友链、、留言板、统计阅读量、打赏、评论等其他辅助功能，同时上传之前写好的博文，持续总结更新。</font></p>
]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>记录</tag>
        <tag>反思</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法说明</title>
    <url>/2021/04/25/mark_down/</url>
    <content><![CDATA[<p><img src="/2021/04/25/mark_down/blog2.jpg" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">Markdown一个Web上使用的文本到HTML的转换工具，可以通过简单、易读写的文本格式生成结构化的HTML文档。</font></p>
<a id="more"></a>

<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><font size="3">Markdown 的目标是实现「易读易写」，适用于网络的书写语言，特殊字符能够自动转换</font></p>
<h4 id="语法使用"><a href="#语法使用" class="headerlink" title="语法使用"></a>语法使用</h4><h6 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h6><p><font size="3">标题,”#”越多，字体越小，“#”后面有空格，对应h1-h6</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line"></span><br><span class="line">## 二级标题</span><br><span class="line"></span><br><span class="line">### 三级标题</span><br><span class="line"></span><br><span class="line">#### 四级标题</span><br><span class="line"></span><br><span class="line">##### 五级标题</span><br><span class="line"></span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h5 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h5><h6 id="字体、大小、颜色"><a href="#字体、大小、颜色" class="headerlink" title="字体、大小、颜色"></a>字体、大小、颜色</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font face&#x3D;&quot;黑体&quot;&gt;我是黑体字&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;red&gt;我是红色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#008000&gt;我是绿色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;Blue&gt;我是蓝色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font size&#x3D;&quot;3&quot;&gt;我是尺寸&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;黑体&quot; color&#x3D;green size&#x3D;&quot;3&quot;&gt;我是黑体，绿色、尺寸3&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure>
<h6 id="文字添加背景色"><a href="#文字添加背景色" class="headerlink" title="文字添加背景色"></a>文字添加背景色</h6><p><font size="3">bgcolor属性实现背景色</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">	&lt;tr&gt;</span><br><span class="line">		&lt;td bgcolor&#x3D;yellow&gt;背景颜色为yellow&lt;&#x2F;td&gt;</span><br><span class="line">	&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br></pre></td></tr></table></figure>
<table>
    <tr>
        <td bgcolor="yellow">背景颜色为yellow</td>
    </tr>
</table>


<h5 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h5><p><font size="3">无序列表：用*、+、- 来创建</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 1		</span><br><span class="line">* 2</span><br><span class="line">* 3</span><br><span class="line">+ 1</span><br><span class="line">+ 2</span><br><span class="line">+ 3</span><br><span class="line">- 1</span><br><span class="line">- 2</span><br><span class="line">- 3</span><br></pre></td></tr></table></figure>
<ul>
<li>1</li>
<li>2</li>
<li>3</li>
</ul>
<p><font size="3">有序列表：根据第一行列表的数字顺序来</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 列表1</span><br><span class="line">2. 列表2</span><br><span class="line">3. 列表3</span><br></pre></td></tr></table></figure>
<font size="3">

<pre><code>1. 列表1

2. 列表2

3. 别表3</code></pre></font>



<h5 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h5><p><font size="3">对某一部分的内容做一些说明或者引用一些话</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 所有的渺小都可以变得伟大</span><br><span class="line">	&gt; 某某人说的</span><br><span class="line">* 前方高能</span><br><span class="line">	&gt; 注意：这里是为了提醒前面有很刺激的事情发生，请做好准备</span><br></pre></td></tr></table></figure>


<ul>
<li><p>所有的渺小都可以变得伟大</p>
<blockquote>
<p>某人说的</p>
</blockquote>
</li>
<li><p>前方高能</p>
<blockquote>
<p>注意：这里是为了提醒前面有很刺激的事情发生，请做好准备 </p>
</blockquote>
</li>
</ul>
<p><font size="3">无序列表下发的便是引用，可以有多种用途，用法是在语句前面加一个&gt;,注意是英文的右尖括号</font></p>
<p><font size="3">嵌套引用</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 一级引用</span><br><span class="line">&gt;&gt; 二级引用</span><br><span class="line">&gt;&gt;&gt; 三级引用</span><br><span class="line">&gt;&gt;&gt;&gt; 四级引用</span><br><span class="line">&gt;&gt;&gt;&gt;&gt; 五级引用</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
<blockquote>
<p>三级引用</p>
<blockquote>
<p>四级引用</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<h5 id="华丽分割线"><a href="#华丽分割线" class="headerlink" title="华丽分割线"></a>华丽分割线</h5><p><font size="3">分割线可以由（星号、减号、底线）三个符号表示，注意至少三个，且不需要连续，有空格也可以</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line">* * *</span><br><span class="line">*******</span><br><span class="line">---</span><br><span class="line">- - -</span><br><span class="line">-----------</span><br><span class="line">_ _ _</span><br></pre></td></tr></table></figure>

<hr>
<hr>
<h5 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h5><p><font size="3">行内式</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[百度](http:&#x2F;&#x2F;www.baidu.com)一下</span><br></pre></td></tr></table></figure>


<p><a href="http://www.baidu.com" target="_blank" rel="noopener">百度</a>一下</p>
<p><font size="3">[ ]内放文字，( )内放链接<br>参数式</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[name]: http:&#x2F;&#x2F;www.baidu.com&#x2F;name &quot;名称&quot;</span><br><span class="line">[name]: http:&#x2F;&#x2F;www.baidu.com&#x2F;home &quot;首页&quot;</span><br><span class="line">[中文]: &#x2F;home&#x2F;name &quot;写的&quot;</span><br><span class="line"></span><br><span class="line">这里是[name],这里是[home],这里是[中文]</span><br></pre></td></tr></table></figure>

<p><font size="3">这里是<a href="http://www.baidu.com/name" target="_blank" rel="noopener" title="名称">name</a>,这里是 [home],这里是<a href="/home/name" title="写的">中文</a><br>把链接当成参数，适合多出使用相同链接的场景</font></p>
<h5 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h5><p><font size="3">行内式和参数式</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">行内式</span><br><span class="line">！[我是图片](https:&#x2F;&#x2F;ww.cnblogs.com&#x2F;images&#x2F;log_small.gif)</span><br><span class="line">![](&#x2F;post&#x2F;hello_hexo.jpg)</span><br><span class="line"></span><br><span class="line">参数式</span><br><span class="line">[博客园]: https:&#x2F;&#x2F;www.cnblogs.com&#x2F;images&#x2F;log_small.gif</span><br><span class="line">参数式图片，这里是！[博客园]</span><br><span class="line"></span><br><span class="line">设置图片百分比</span><br><span class="line">&lt;img src&#x3D;&quot;&#x2F;index&#x2F;index.jpg&quot; width&#x3D;&quot;50%&quot; height&#x3D;&quot;50%&quot;&gt;</span><br><span class="line"></span><br><span class="line">设置图片大小</span><br><span class="line">&lt;img src&#x3D;&quot;&#x2F;index&#x2F;index.jpg&quot; width&#x3D;&quot;250&quot; height&#x3D;&quot;350&quot;&gt;</span><br><span class="line"></span><br><span class="line">设置图片居中</span><br><span class="line">&lt;div align&#x3D;right&gt;	&#x2F;&#x2F;ps:center、left、right</span><br><span class="line">	&lt;img src&#x3D;&quot;&#x2F;index&#x2F;index.jpg&quot; width&#x3D;&quot;50%&quot; height&#x3D;&quot;50%&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<h5 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h5><p><font size="3">第一种，单行用ˋ</font></p>
<p><code>&lt;p&gt;&lt;a href=&quot;/home&quot; title=&quot;说明&quot;&gt;门前大桥下&lt;/a&gt;&lt;/p&gt;</code></p>
<p>第二种，多行用三个ˋ</p>
<p>ˋ ˋ ˋ<br><code>&lt;p&gt;&lt;a href=&quot;/home&quot; title=&quot;说明&quot;&gt;门前大桥下&lt;/a&gt;&lt;/p&gt;</code>​<br>ˋ ˋ ˋ</p>
<h5 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|	name	|	age		|sex	|</span><br><span class="line">|:----:|:---:|:--------:|:------:|</span><br><span class="line">|	tony	|	20		|	男	|</span><br><span class="line">|	lucy	|	19		|	女	|</span><br><span class="line"></span><br><span class="line">表头1	|	表头2</span><br><span class="line">-------------|------------</span><br><span class="line">Content Cell	| Content Cell</span><br><span class="line">Content Cell	| Content Cell</span><br><span class="line"></span><br><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|85</span><br><span class="line">小路|男|90</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">name</th>
<th align="center">age</th>
<th align="center">sex</th>
</tr>
</thead>
<tbody><tr>
<td align="center">tony</td>
<td align="center">20</td>
<td align="center">男</td>
</tr>
<tr>
<td align="center">lucy</td>
<td align="center">19</td>
<td align="center">女</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>表头1</th>
<th>表头2</th>
</tr>
</thead>
<tbody><tr>
<td>Content Cell</td>
<td>Content Cell</td>
</tr>
<tr>
<td>Content Cell</td>
<td>Content Cell</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>学号</th>
<th>姓名</th>
<th>分数</th>
</tr>
</thead>
<tbody><tr>
<td>小明</td>
<td>男</td>
<td>89</td>
</tr>
<tr>
<td>小路</td>
<td>男</td>
<td>95</td>
</tr>
</tbody></table>
<h5 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*字体倾斜*</span><br><span class="line">_字体倾斜_</span><br><span class="line">**字体加粗**</span><br><span class="line">__ 字体加 __</span><br></pre></td></tr></table></figure>

<p><em>字体倾斜</em><br><em>字体倾斜</em><br><strong>字体加粗</strong><br><strong>字体加粗</strong></p>
<p><font size="3">一个星号或者是一个下划线包起来，会转换为<em>倾斜，如果2个，会转换为<strong>加粗</strong></em></font></p>
<h5 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* \\</span><br><span class="line">* \ˋ</span><br><span class="line">* \~</span><br><span class="line">* \*</span><br><span class="line">* \_</span><br><span class="line">* \-</span><br><span class="line">* \+</span><br><span class="line">* \.</span><br><span class="line">* \!</span><br></pre></td></tr></table></figure>

<ul>
<li>\</li>
<li>\ˋ</li>
<li>~</li>
<li>*</li>
<li>_</li>
<li>-</li>
<li>+</li>
<li>.</li>
<li>!</li>
</ul>
<h5 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~~请删除我吧~~</span><br></pre></td></tr></table></figure>

<p><del>请删除我吧</del></p>
<p><font size="3">常用基本就这些了，还有常用的，后续补充上去！</font></p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络</title>
    <url>/2021/04/26/internet/</url>
    <content><![CDATA[<p><img src="/2021/04/26/internet/blog3.jpeg" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">计算机网络如同一个遍布全球的蜘蛛网,将全世界连在一起。</font></p>
<a id="more"></a>

<h3 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h3><p><font size="3">计算机网络，是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。</font></p>
<p><font size="3">组成设备：<br>1、两台以上的计算机及终端组成<br>2、前端处理机（FEP）或通行处理机或通行控制处理机（CCP）<br>3、路由器、交换机等连接设备<br>4、通行线路</font><br><font size="3">计算机网络的软件部分包括 协议 和 应用软件 两部分；协议是计算机网络的核心，由 语法、语义、时序 构成</font></p>
<h3 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h3><p><font size="3">定义：将计算机网络体系结构的通行协议划分为七层；描述了网络活动的特点<br>应用层、表示层、会话层、传输层、网络层、数据链路层、物理层</font></p>
<h4 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h4><p><font size="3">应用层是操作系统或网络应用层析提供访问网络服务的接口；所有的应用程序的网络在此展开</font></p>
<h4 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h4><p><font size="3">表示层对上层数据或信息进行交换，保证一个主机应用层信息可以被另一个主机的应用程序理解；表示层完成对的数据转换：包括数据的加密、解密、压缩、格式转换等</font></p>
<h4 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h4><p><font size="3">会话层管理主机之间的会话进程，负责建立、管理、终止进程之间的会话（session缓存）；<br>会话层还利用在数据中插入校验点来实现数据的同步。</font><br><font size="3">有关会话层、表示层、应用层重点：<br>数据传输基本单位为报文<br>包含的主要协议：<br>FTP（文件传输协议）；<br>Telnet（远程登录协议）；<br>DNS（域名解析协议）；<br>SMTP（邮件传送协议）；<br>POPS协议（邮局协议）；<br>HTTP协议（HyPer Text Transfer Protocol）</font></p>
<h4 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h4><p><font size="3">传输层负责建立一个可靠的端到端（主机到主机）的链接，负责将上层数据分段并提供端到端的、可靠的或不可靠的传输；还要处理端到端的差错控制和流量控制问题</font></p>
<p><font size="3">有关传输层的重点：</font></p>
<p><font size="3">包含的主要协议：TCP协议（Transmission Control Protocol，传输控制协议、UDP协议（User Datagram Protocol，用户数据报协议）</font></p>
<h4 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h4><p><font size="3">网络层目的是实现两端系统之间的数据透明传送，具体功能包括寻址、路由选择、连接的建立、保持和终止等。它提供的服务使传输层不需要了解网络中的数据传输和交换技术。简单说就是”路由选择，路由及逻辑寻址“</font></p>
<p><font size="3">网络层涉及协议：IP协议:提供不可靠、无连接的传送服务，IP协议主要功能有：无连接数据报传输、数据报路由选择和差错控制。</font></p>
<p><font size="3">有关网络层的重点：<br>网络层负责对子网间的数据包进行路由选择；还可以实现拥塞控制、网际互联等功能；<br>基本数据单位是IP数据报<br>包括主要协议：IP协议、地址解析协议ARP、逆地址解析协议RARP、因特网报文协议ICMP、因特网组管理协议IGMP<br>重要的设备：路由器</font></p>
<h4 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h4><p><font size="3">数据链路层最基本的服务是将原子网络层来的数据可靠地传输到临结点的目标机网络层；数据组合成数据块，在数据链路层中数据块为帧（frame），帧是数据链路层的传送单位； 作用包括：物理地址寻址、数据封装成帧、流量控制、数据检错、重发等</font></p>
<p><font size="3">有关数据链路层的重点：<br>数据链路层为网路层提供可靠的数据传输<br>基本单位为帧<br>主要协议：以太网协议<br>两个重要设备：网桥、交换机</font></p>
<h4 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h4><p><font size="3">为上层协议提供一个传数据的可靠物理媒体，物理层确保原始的数据可在各种物理媒体上传输；物理层两个重要设备：中继器（repeater，也叫放大器）、接线器；物理层只负责传输0和1二进制bit流</font></p>
<h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><p><font size="3">数据传输基本单位为报文</font></p>
<p><font size="3">包含的主要协议：<br>FTP（文件传输协议）；<br>Telnet（远程登录协议）；<br>DNS（域名解析协议）；<br>SMTP（邮件传送协议）；<br>POPS协议（邮局协议）；<br>HTTP协议（HyPer Text Transfer Protocol）</font></p>
<h4 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h4><p><font size="3">Hypertext Transfer Protocol 超文本传输协议，基于请求与相应模式的、应用层和网络协议规定客户端和服务器的数据传输格式，就是一种约定；客户端和服务器通信实现细节</font><br><font size="3">网络模型：<br>应用层   —&gt;HTTP协议<br>传输层   —&gt;TCP协议/UDP协议<br>网络层  —-&gt;IP协议<br>物理层</font></p>
<p><font size="3">保持连接：http请求和响应，现在客户端和服务器建立tcp连接，不会完成一次http请求响应即关闭，可以在一次tcp连接上完成多次http请求和响应</font></p>
<h4 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h4><p><font size="3">uniform resource locator 统一资源定位符，互联网上标准资源的地址</font></p>
<p><font size="3">HTTP使用URL来建立连接和传输数据：如：如：<a href="http://www.itcast.cn:8080/news/index.html?uid=123&amp;page=1" target="_blank" rel="noopener">http://www.itcast.cn:8080/news/index.html?uid=123&amp;page=1</a><br>url格式：schema://host[:port#]/path/..[?query-string]<br>scheme：协议：“http”,常见协议有HTTP,HTTPS,FTP等<br>host：域名/IP：“<a href="http://www.iicast.cn&quot;,可以使用IP地址作为域名使用" target="_blank" rel="noopener">www.iicast.cn&quot;,可以使用IP地址作为域名使用</a><br>port：端口：“8080”，端口可省略，默认端口（HTTP:80，HTTPS:443，FTP:21)<br>path：资源路径：“/news/index.html”<br>query-string：发送参数：“uid=123&amp;page=1”,运行有多个参数，用”&amp;“作为分隔符</font></p>
<h4 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h4><p><font size="3">HTTP请求<br>由三部分组成：请求行、请求头、（空一行）、请求体</font></p>
<p><font size="3">常用请求方法<br>GET：从服务器获取资源<br>POST：在服务器新建一个资源<br>PUT：在服务器更新资源（客户提供改变后的完整资源）<br>DELETE：从服务器删除资源</font></p>
<p><font size="3">数据传输格式<br>1、键值对：？xx=11&amp;xxx=22<br>2、Json数据：<br>{<br>“属性名1” : “属性值”,<br>“属性名2” : “属性值”<br>}</font></p>
<h4 id="HTTP响应"><a href="#HTTP响应" class="headerlink" title="HTTP响应"></a>HTTP响应</h4><p><font size="3">由三部分组成：状态行(协议版本号、状态码、状态消息)、响应行、响应正文<br>状态码：三位数字组成<br>1xx：指示信息–表示请求已接收，继续处理<br>2xx：成功–表示请求已被成功接收、理解、接受<br>3xx：重定向–要完成请求必须进行更进一步的操作<br>4xx：客户端错误–请求有语法错误或请求无法实现<br>5xx：服务器端错误–服务器未能实现合法的请求</font></p>
<h4 id="TCP-IP协议"><a href="#TCP-IP协议" class="headerlink" title="TCP/IP协议"></a>TCP/IP协议</h4><p><font size="3">定义：网络通讯协议<br>1、应用层：应用程序之间互相沟通的层<br>2、传输层：提供了数据传送，应用程序之间的通信服务<br>3、网络互联层：负责提供基本的数据封包传送功能，让数据包到达目的主机<br>4、网络接口层：接收数据，并进行传输</font></p>
<h3 id="Windows网络命令"><a href="#Windows网络命令" class="headerlink" title="Windows网络命令"></a>Windows网络命令</h3><p><font size="3">1、ping命令：用于检测网络是否畅通，以及网络时延情况（工作在ICMP协议上）</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping 主机名</span><br><span class="line">ping 域名</span><br><span class="line">ping IP地址</span><br></pre></td></tr></table></figure>

<p><font size="3">2、ipconfig命令：显示当前TCP/IP配置的设置信息，检验人工设置的TCP/IP设置是否正确；了解计算机是否成功租用到了一个IP地址</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ipconfig:不带任何参数时，显示每个已近配置了的接口的IP地址、子网掩码和缺省网关值</span><br><span class="line"></span><br><span class="line">ipconfig&#x2F;all:当使用all选项时，ipconfig能为DNS和WINS服务器显示它已近配置且所有使用的附加信息；能够显示内置于本地网卡中的物理地址（MAC）</span><br><span class="line"></span><br><span class="line">ipconfig&#x2F;release和ipconfig&#x2F;renew：这两个附加选项，只能在向DHCP服务器租用IP地址的计算机使用。输入ipconfig &#x2F;release，所有接口的租用IP地址便重新交付给DHCP服务器(归还IP地址)。输入ipconfig&#x2F;renew，本地计算机便设法与DHCP服务器取得联系，并租用一个IP地址。大多数情况下网卡将被重新赋予和以前所赋予的相同的IP地址。</span><br></pre></td></tr></table></figure>

<p><font size="3">3、arp命令（地址转换协议）</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ARP是TCP&#x2F;IP协议族中的一个重要协议，用于确定对应IP地址的网卡物理地址。使用arp命令，能够查看本地计算机或另一台计算机的ARP高速缓存中的当前内容。</span><br><span class="line"></span><br><span class="line">arp -a:用于查看高速缓存中的所有项目</span><br></pre></td></tr></table></figure>

<p><font size="3">4、netstat命令</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netstat用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况</span><br><span class="line">netstat -a	&#x2F;&#x2F; 显示所有连接和监听端口</span><br><span class="line">netstat -n	&#x2F;&#x2F; 以数字格式显示IP地址</span><br><span class="line">netstat -o	&#x2F;&#x2F; 显示每个连接所属的处理id</span><br></pre></td></tr></table></figure>

<p><font size="3">5、net命令</font></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、net view 查看远程主机的所有共享资源	</span><br><span class="line">net view &#x2F;IP</span><br><span class="line"></span><br><span class="line">2、net use	把远程主机的某个共享资源映射到本地盘符，图形界面方法使用</span><br><span class="line">net use:&#x2F;IP&#x2F;sharename</span><br><span class="line"></span><br><span class="line">3、net start	启动远程主机上的服务，当和远程主机建立连接，发现它的某些服务没有启动使用此命令</span><br><span class="line">net start servername</span><br><span class="line"></span><br><span class="line">4、net stop	关闭主机的某个服务</span><br><span class="line"></span><br><span class="line">5、net user	查看和账户有关的情况，包括新建账户、删除账户、查看特定账户、激活或禁用账户</span><br><span class="line">net user abcd 1234 &#x2F;add，新建一个用户名为abcd,密码为1234的账号，默认为user组成</span><br><span class="line">net user abcd &#x2F;del，将用户名为abcd的用户删除</span><br><span class="line">net user abcd &#x2F;active:no，将用户名为abcd的用户禁用</span><br><span class="line">net user abcd &#x2F;active:yes，激活用户名为abcd的用户</span><br><span class="line">net user abcd，查看用户名为abcd的用户的情况</span><br><span class="line"></span><br><span class="line">6、net localgroup	查看所有和用户组有关的信息和进行相关操作</span><br><span class="line">netlocalgroup roupname username &#x2F;add</span><br><span class="line"></span><br><span class="line">7、net time	查看远程主机当前的时间</span><br></pre></td></tr></table></figure>



<h3 id="常用DOS指令"><a href="#常用DOS指令" class="headerlink" title="常用DOS指令"></a>常用DOS指令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">win+R	cmd运行窗口</span><br><span class="line"></span><br><span class="line">1、ipconfig&#x2F;all		查看电脑物理地址（mac)信息</span><br><span class="line"></span><br><span class="line">2、arp -a	查看IP地址和物理地址对应关系</span><br><span class="line"></span><br><span class="line">3、ping 网络地址  	查看当前计算机和要访问的计算机之间的连通情况（如ping www.baidu.com)</span><br><span class="line"></span><br><span class="line">4、cls		清屏</span><br><span class="line"></span><br><span class="line">5、盘符：	切换对应的盘符</span><br><span class="line"></span><br><span class="line">6、cd 文件名	进入对应的文件夹（目录）</span><br><span class="line"></span><br><span class="line">7、dir		显示文件夹中的文件目录</span><br><span class="line"></span><br><span class="line">8、cd..		返回上一级</span><br><span class="line"></span><br><span class="line">9、cd&#x2F;		返回根目录</span><br><span class="line"></span><br><span class="line">10、md 文件夹名称		新建文件夹</span><br><span class="line"></span><br><span class="line">11、rd 名字  		删除目录，(不能删除有内容的文件夹）</span><br><span class="line">D:\Users\Administrator&gt;rd D:\Users\Administrator\6</span><br><span class="line"></span><br><span class="line">12、copy 想复制的目录结构和名字   目标目录</span><br><span class="line">D:\Users\Administrator&gt;copy D:\Users\Administrator\6\1.txt D:\Users\Administrator\7</span><br><span class="line">已复制         1 个文件。</span><br><span class="line"></span><br><span class="line">13、move 想剪切的目录结构和名字   目标目录</span><br><span class="line">D:\Users\Administrator&gt;move D:\Users\Administrator\6\1.txt D:\Users\Administrator\7</span><br><span class="line">移动了         1 个文件</span><br><span class="line"></span><br><span class="line">14、del 文件路径\名字	删除目录内的所有文件，注意：如果只写目录，会删除该目录中</span><br><span class="line"></span><br><span class="line">15、del *.*		删除当前目录中的所有文件（不是文件夹）</span><br><span class="line"></span><br><span class="line">16、del 具体的文件目录和名字		可以单独删除某一个文件</span><br><span class="line">D:\1\2\5&gt;del D:\1\2\5\a.txt</span><br><span class="line"></span><br><span class="line">17、format：盘符	格式化，清空数据</span><br><span class="line"></span><br><span class="line">18、键盘上、下、重复之前的代码</span><br><span class="line"></span><br><span class="line">19、exit		关闭dos窗口	</span><br><span class="line"></span><br><span class="line">20、Ctrl+C	退出当前执行的命令</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>测试使用</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>命令</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo使用</title>
    <url>/2021/04/26/hello_hexo/</url>
    <content><![CDATA[<p><img src="/2021/04/26/hello_hexo/blog4.png" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</font></p>
<a id="more"></a>


<h3 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h3><p><font size="3">hexo是一个基于Node.js的静态博客网站生成器，是一个快速、简洁且高效的博客框架，作者是来自台湾的 <a href="http://mailto:tommy351@gmail.com/" target="_blank" rel="noopener">Tommy Chen</a>，依赖少易于安装使用，利用靓丽的主题生成静态网页。</font></p>
<p><font size="3">特点：<br>1.依赖少（仅依赖node），易于安装；<br>2.速度快，支持多进程，利用靓丽的主题，几百篇文章可以秒生成静态网页；<br>3.流畅的撰写，支持GitHub Flavored Markdown和所有Octopress的插件;<br>4.高扩展性、自订性，hexo支持EJS、Swig和Stylus;<br>5.兼容于Windows、Mac &amp; Linux;</font></p>
<h3 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h3><h5 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h5><font size="3">
   widows:到git官网下载，Download git，下载安装后通过Git Bash命令行工具来使用git
   linux:最早git就是Linux上编写的，只需要一行代码</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install	&#x2F;&#x2F; linux命令安装</span><br><span class="line"></span><br><span class="line">git --version &#x2F;&#x2F; 安装后查看版本</span><br></pre></td></tr></table></figure>


<h5 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h5><font size="3">
   hexo是基于nodejs编写的，需要安装node.js里面的npm工具
   Windows：通过nvs（推荐）或者nvm安装，确保勾选add to path
   Mac：使用Homebrew或MacPorts安装
   Linux：（DEB/RPM-based）：从NodeSource安装</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">&#x2F;&#x2F; 检查是否安装成功</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>


<h5 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h5><font size="3">
   ​前面git和nodejs安装好后，使用npm安装Hexo，先创建一个文件夹blog，然后cd到这个文件夹，右键git bash打开</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli	&#x2F;&#x2F; 输入命令安装</span><br><span class="line"></span><br><span class="line">hexo -v	&#x2F;&#x2F; 查看版本</span><br><span class="line"></span><br><span class="line">hexo init myblog&#x2F;&#x2F; 初始化hexo</span><br><span class="line"></span><br><span class="line">cd myblog	</span><br><span class="line"></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p><font size="3">新建完成后，指定文件夹目录简介：<br>&nbsp;&nbsp;&nbsp;node_modules：依赖包<br>&nbsp;&nbsp;&nbsp;public：存放生成的页面，网站文件，发布的站点文件<br>&nbsp;&nbsp;&nbsp;scaffolds：生成文字的一些模板<br>&nbsp;&nbsp;&nbsp;source：用来存放你的文章，资源文件夹<br>&nbsp;&nbsp;&nbsp;themes：主题<br>&nbsp;&nbsp;&nbsp;config.yml：博客的配置文件<br>&nbsp;&nbsp;&nbsp;tag：标签文件<br>&nbsp;&nbsp;&nbsp;archive：归档文件夹<br>&nbsp;&nbsp;&nbsp;category：分类文件夹</font></p>
<h5 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h5><font size="3">
   ​hexo提供了默认主题landscape，如果需要更改，先在themes目录创建一个next文件夹，然后在hexo站点目录下右击打开Git Bash Here，输入命令</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next.git themes&#x2F;next</span><br></pre></td></tr></table></figure>

<p><font size="3">在blog目录下_config.yml里面theme的配置修改为next</font><br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></p>
<h5 id="Github创建配置和使用"><a href="#Github创建配置和使用" class="headerlink" title="Github创建配置和使用"></a>Github创建配置和使用</h5><font size="3">
   首先需要在github账户下，新建仓库new repository
   创建一个和用户名相同的仓库，后面加.github.io，这样到后面部署到github page的时候才会被识别，也就是xxxx.github.io，其他xxxx是注册github的用户名;</font>

<p>   <font size="3">生成SSH密钥添加到github，github的setting中；</font></p>
<p>   <font size="3">id_rsa是你这台电脑的私人密钥，不能给别看的；</font></p>
<p>   <font size="3">id_rsa.pub是公共秘钥，可以随便给别人看，把这个公钥放在github上，这样当你链接github自己的账户时，就会根据公共匹配你的私钥，通过git上传你的文件到github上。</font></p>
<p>   <font size="3">找到SSH keys设置选项，点击New SSh key</font></p>
<p>   <font size="3">在gitbash中，查看是否成功</font><br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p>
<h5 id="将Hexo部署到GitHub"><a href="#将Hexo部署到GitHub" class="headerlink" title="将Hexo部署到GitHub"></a>将Hexo部署到GitHub</h5><font size="3">
   将hexo和github关联起来，将hexo生成的文章部署到github上，打开站点配置文件_config.yml</font>
   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deply:</span><br><span class="line"></span><br><span class="line">type: git</span><br><span class="line"></span><br><span class="line">repo: https:&#x2F;&#x2F;jamieslau.github.io&#x2F;index.html</span><br><span class="line"></span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>
<font size="3">需先按照deploy-git,也就是部署的命令，这样你才能用命令部署到github</font>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p><font size="3">执行hexo命令</font><br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean	&#x2F;&#x2F; 清除之前生成的东西，可以不加</span><br><span class="line"></span><br><span class="line">hexo generate	&#x2F;&#x2F; 生成静态文章，hexo g 缩写</span><br><span class="line"></span><br><span class="line">hexo deploy	&#x2F;&#x2F; 部署文章， hexo d 缩写</span><br><span class="line"></span><br><span class="line">hexo s	&#x2F;&#x2F; 发布，本地预览</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;localhost:4000	&#x2F;&#x2F; 本地查看</span><br><span class="line"></span><br><span class="line">使用sublime修改config.yml配置JamiesLau博客</span><br></pre></td></tr></table></figure><br><font size="3">deploy时需要输入username和password</font></p>
<p><font size="3">创建一个新帖子</font><br>   <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new 帖子名称&#x2F;&#x2F; 创建新帖子，hexo n 帖子名称   缩写</span><br><span class="line"></span><br><span class="line">Sublime编辑帖子标签、分类</span><br><span class="line"></span><br><span class="line">title: 重拾记忆</span><br><span class="line">date: 2021-04-24 20:00:39</span><br><span class="line">tags:</span><br><span class="line"> - 记录</span><br><span class="line"> - 分享</span><br><span class="line">categories: 日常记录</span><br><span class="line"></span><br><span class="line">编辑正文，开始你的创作</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>命令</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>软件测试基础</title>
    <url>/2021/04/28/test_base/</url>
    <content><![CDATA[<p><img src="/2021/04/28/test_base/blog5.jpg" alt></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><font size="3">软件是由程序、数据和文档三部分组成。软件，国标中对软件的定义为：与计算机系统操作有关的计算机程序、规程、规则，以及可能有的文件、文档及数据。</font></p>
<a id="more"></a>




<h3 id="软件生命周期"><a href="#软件生命周期" class="headerlink" title="软件生命周期"></a>软件生命周期</h3><p><font size="3">软件的生命周期由软件定义，软件开发，运行维护（软件维护）3个时期组成，每个时期又进一步划分成若干个阶段</font></p>
<p><font size="3">问题的定义、可行性研究、需求分析；概要设计、详细设计、编码实现、软件测试；软件维护</font></p>
<h5 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h5><p><font size="3">每个阶段执行一次，线性顺序执行</font></p>
<p><font size="3">优点：开发阶段，各阶段比较清晰；严格规定了每个阶段必须提交的文档；强调早期计划及需求调查；适合稳定需求的产品开发；</font></p>
<p><font size="3">缺点：用户只能通过文档来了解产品，但仅通过卸载纸上的静态规格说明，很难全面认识软件产品，导致最终开发的软件不能真正满足用户的需要</font></p>
<p><font size="3">改良：每个阶段都可以融入小的迭代动作</font></p>
<p><font size="3">使用范围：客户要求清楚全面，开发人员对软件应用领域很熟，用户使用环境稳定，用户参与开发要求低</font></p>
<h5 id="快速原型模型"><a href="#快速原型模型" class="headerlink" title="快速原型模型"></a>快速原型模型</h5><p><font size="3">实现一个基本原型，让用户对原型进行评价，逐步调整，使其满足用户最终要求</font></p>
<p><font size="3">优点：适合不能确定需求的软件；可以得到比较良好的定义，容易使用需求 的变化；有利于开发和培训的同步；开发费用降低，开发周期短，对用户更友好</font></p>
<p><font size="3">缺点：不适合开发大型系统；客户与开发者对原型的理解不同；准备的原型设计比较困难；不利于开发人员的创新</font></p>
<p><font size="3">使用范围：读所开发的领域比较熟悉而且有快速的原型开发工具；产品移植或者升级</font></p>
<h5 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h5><p><font size="3">优点：人员分配灵活，刚开始不用投入大量人力资源；如果核心产品很受欢迎，则可增加人力实现下一个增量；</font></p>
<p><font size="3">缺点：并行开发有可能遇到不能集成的风险，软件必须具备卡方式的体系结果；灵活性可以适应变化的能力优于瀑布模型和快速原型模型，但也容易退化为边做边改模型，从而软件过程的控制失去整体性</font></p>
<p><font size="3">对已有产品的升级或者新版本的开发；对完成期限要求高；对所开发的领域比较熟悉而且已有原型系统</font></p>
<h5 id="螺旋模型"><a href="#螺旋模型" class="headerlink" title="螺旋模型"></a>螺旋模型</h5><p><font size="3">引入风险分析方法，适用于需求不清楚的大型项目</font></p>
<p><font size="3">设计的灵活性；可在项目的各个阶段进行变更；分段来构建大型系统，使成本计算变得简单；客户始终参与每个阶段的开发，保证了项目不偏离的正确方向以及项目的可控性；能有效的和客户进行交互。</font></p>
<p><font size="3">缺点：要具备相当丰富的风险评估经验和专门知识，在风险较大的项目开发中，如果未能及时标志风险，势必造成重大损失；过多的迭代次数或增加开发成本，延迟提交时间</font></p>
<p><font size="3">使用范围：适用于需求不清楚的软件项目</font></p>
<h3 id="软件测试模型"><a href="#软件测试模型" class="headerlink" title="软件测试模型"></a>软件测试模型</h3><h5 id="V模型"><a href="#V模型" class="headerlink" title="V模型"></a>V模型</h5><p><img src="/2021/04/28/test_base/v.jpg" alt></p>
<p><font size="3">优点：阶段划分清晰，方便工作的整理把控；包含：底层测试：检验代码质量的测试，如单元测试，高层测试：检验整个系统的需求，如系统测试</font></p>
<p><font size="3">缺点：测试阶段靠后，之前的问题产生修改不方便；v模型是瀑布模型的边志勇，若需求变更，模型灵活性低</font></p>
<h5 id="W模型"><a href="#W模型" class="headerlink" title="W模型"></a>W模型</h5><p><font size="3">双v模型，一个开发v，一个测试v，将开发和测试的工作同时进行，解决v模型的缺点；测试伴随整个软件开发周期，并且测试的对象是需求、设计、程序</font></p>
<p><img src="/2021/04/28/test_base/W.jpg" alt></p>
<p><font size="3">优点：开发测试并行，测的的对象是需求、设计、程序；尽早介入测试，会更糟发现问题，降低修复成本；阶段明显，方便整体流程把控；早介入、早发现、早修复</font></p>
<p><font size="3">缺点：代码依然在测试之前，不方便代码的测试工作；如果没有文旦（中小型企业），根本无法进行w模型；对于测试人员要求高；w模型不适合“敏捷”这种需求频繁便更的开发模式</font></p>
<h5 id="H模型"><a href="#H模型" class="headerlink" title="H模型"></a>H模型</h5><p><font size="3">软件测试过程活动完全独立，贯穿于整个产品的周期，与其他流程并发地进行，某个测试点准备就绪时，可从测试准备阶段进行到测试执行阶段；软件测试可以尽早进行，并且可根据被测物的不同而分层次进行；只要某个测试到达准备就绪点，测试执行活动就可以开展</font></p>
<h3 id="敏捷开发"><a href="#敏捷开发" class="headerlink" title="敏捷开发"></a>敏捷开发</h3><h5 id="一、迭代开发"><a href="#一、迭代开发" class="headerlink" title="一、迭代开发"></a>一、迭代开发</h5><p><font size="3">敏捷开发的核心是迭代开发，敏捷一定是采用迭代开发的方式，iterative，重复开发；将开发的过程拆分成多个小周期，即一次大开发变成多次小开发，每次小开发都是同样的流程，好像重复在做同样的步骤</font></p>
<p><font size="3">迭代开发将一个大任务，分解成多次连续的开发，本质就是逐步开发，开发者最先快速发布一个有效但不完美的最简版本，然后不断迭代，每次迭代包含规划、设计、编码、测试、评估；不断改进产品，添加新功能，通过频繁发布，以及跟踪对前一个迭代的反馈，最终接近较完善的产品形态</font></p>
<h5 id="二、增量开发"><a href="#二、增量开发" class="headerlink" title="二、增量开发"></a>二、增量开发</h5><p><font size="3">迭代开发只是要求将<br>开发分成多个迭代，但不知怎么划分迭代，一般采用增量开发划分迭代，划分具体的任务放在哪个版本的迭代中</font></p>
<p><font size="3">增量开发：指的是软件的每个版本，都会新增一个用户可以感知的完整功能，按照新增功能来划分迭代，增量开发加上敏捷开发才算是真正的敏捷开发</font></p>
<p><font size="3">敏捷开发好处：1、早期交付，降低成本；2、降低风险，及时了解市场需求，降低产品不适用的风险；</font></p>
<h5 id="敏捷开发的好处"><a href="#敏捷开发的好处" class="headerlink" title="敏捷开发的好处"></a>敏捷开发的好处</h5><p><font size="3">早期交付，大大降低成本；降低风险，及时了解市场需求，降低产品不适用的风险</font></p>
<h5 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h5><p><font size="3">迭代：每次迭代都都是一个完整的软件开发周期，必须按照软件工程的方法论，进行正规的流程管理</font><br><font size="3">1、需求分析（requirements analysis)<br>2、设计（design)<br>3、编码（coding）<br>4、测试（testing）<br>5、部署和评估（deployment/evaluation）</font></p>
<h5 id="敏捷开发价值观"><a href="#敏捷开发价值观" class="headerlink" title="敏捷开发价值观"></a>敏捷开发价值观</h5><p><font size="3">程序员的主观能动性，以及程序员之间的互动，优于既定流程和工具<br>软件能够运行，优于详尽的文档<br>跟客户的密切协作，优于合同和谈判<br>能够响应变化，优于遵循计划</font></p>
<h5 id="开发模式"><a href="#开发模式" class="headerlink" title="开发模式"></a>开发模式</h5><p><font size="3">角色：<br>产品负责人（PO）产品经理：主要负责整理需求，需求呈现形式为用户故事<br>项目经理（Scrum Master (SM)）：负责带领团队完成相关业务<br>开发团队（Dev Team ）：开发（前端、后端）、UI/UE、测试</font><br><font size="3">输出物<br>产品代办列表（用户故事）<br>迭代待办列表<br>产品增量（可工作的软件）</font></p>
<p><font size="3">5个活动<br>迭代（冲刺）sprint<br>迭代计划：确定迭代待办列表内容<br>每日站会<br>评审会<br>回顾会</font></p>
<p><font size="3">敏捷测流程（一次迭代）</font></p>
<h3 id="软件测试分类"><a href="#软件测试分类" class="headerlink" title="软件测试分类"></a>软件测试分类</h3><p><img src="/2021/04/28/test_base/c.jpg" alt></p>
<h5 id="按测试阶段分类"><a href="#按测试阶段分类" class="headerlink" title="按测试阶段分类"></a>按测试阶段分类</h5><p><font size="3">单元测试：又称模块测试，从程序内部结构出发<br>集成测试：（组装测试），将所有程序模块进行有序的、递增测试，重点测试不同的接口部分<br>系统测试：主要测试系统功能、性能、是否满足需求，在不同软硬环境不同的兼容性</font></p>
<h5 id="按照是否覆盖源代码分类"><a href="#按照是否覆盖源代码分类" class="headerlink" title="按照是否覆盖源代码分类"></a>按照是否覆盖源代码分类</h5><p><font size="3">黑盒测试：不考虑内部结构和内部特性，注重测试功能需求，输入数据和输出数据<br>功能测试：检查软件功能是否符合用户需求；逻辑、界面、易用性、安装、兼容性；等价类划分、边界值分析、因果图、判定表、场景法、流程图、正交法、错误推断法<br>性能测试：峰值、高端领域；时间性能（事务相应时间）、空间性能（系统消耗资源）、稳定性测试、负载测试、压力测试<br>白盒测试：查看源代码和程序结构；逻辑覆盖、循环覆盖、基本路径覆盖</font></p>
<h5 id="按是否运行分类"><a href="#按是否运行分类" class="headerlink" title="按是否运行分类"></a>按是否运行分类</h5><p><font size="3">静态测试：不运行软件，静态检查程序代码、界面或文档中可能存在错误<br>动态测试：运行被测试软件，输入相应的测试软件，检查输入结果是否符合预期结果</font></p>
<h5 id="其他分类"><a href="#其他分类" class="headerlink" title="其他分类"></a>其他分类</h5><p><font size="3">回归测试：修改了旧代码后，重新进行测试确认修改没有引入新的错误或导致其他代码产生错误，滚动版本之后进行回归验证前面的功能模块<br>冒烟测试：用于确认代码中的更改会按预期运行，且不会破坏整个版本的稳定性<br>随机测试：测试重点模块或之前出过问题的模块</font></p>
<p><font size="3"></font></p>
<h5 id="验收测试"><a href="#验收测试" class="headerlink" title="验收测试"></a>验收测试</h5><p><font size="3">内测版本（alpha）：在用户组织模拟软件系统的运行环境下的一种验收测试，由用火或第三方测试公司进行测试；（内部人员主导测试，或少一部分用户；要解决严重问题）；模拟各类用户行为，对即将面向市场的软件产品进行测试<br>公测版本（beta）：用户公司组织各方面的典型终端用户在日常工作中实际使用beta版本，并要求用户报告异常情况，提出批评意见；客户主导测试，所有用户可以免费试用，用户反馈修复软件的细节</font></p>
<p><font size="3">准正式版本（gamma）：正式版的候选版本</font></p>
<p><font size="3">内测alpha和公测beta测试区别：<br>测试场所不同：alpha测试是指把用户请到开发方的场所来测试（内部人员主导，用户数量较少，时间较集中）；beta测试是指一个或多个用户的场所进行的测试（用户数量较多，时间不集中，周期比较长）；alpha测试先于beta测试执行。</font></p>
]]></content>
      <categories>
        <category>测试使用</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>理论</tag>
      </tags>
  </entry>
</search>
